WEBVTT

1
00:00:00.160 --> 00:00:01.600
All right, so in this particular

2
00:00:01.600 --> 00:00:03.680
video, let's start from very

3
00:00:03.680 --> 00:00:05.520
basics and from the beginning.

4
00:00:05.520 --> 00:00:08.480
Okay, so what is a, system design?

5
00:00:08.480 --> 00:00:10.640
So system design refers to a,

6
00:00:10.640 --> 00:00:12.320
mechanism or a study

7
00:00:12.320 --> 00:00:14.360
where you design the systems

8
00:00:14.360 --> 00:00:15.919
to work on a scale.

9
00:00:15.919 --> 00:00:16.880
Let's start from the very

10
00:00:16.880 --> 00:00:18.960
beginning that what is a simplest

11
00:00:18.960 --> 00:00:20.480
system design can look like.

12
00:00:20.480 --> 00:00:21.920
For example, in your system

13
00:00:21.920 --> 00:00:24.080
design you have a component and

14
00:00:24.080 --> 00:00:26.000
everything starts from a, user

15
00:00:26.000 --> 00:00:27.320
who is a user who is basically

16
00:00:27.320 --> 00:00:28.520
interacting with your server,

17
00:00:28.520 --> 00:00:29.840
who is basically using your

18
00:00:29.840 --> 00:00:30.880
application.

19
00:00:30.880 --> 00:00:32.159
So in your system design

20
00:00:32.159 --> 00:00:33.920
component, you have users who

21
00:00:33.920 --> 00:00:35.400
are talking to your server.

22
00:00:35.400 --> 00:00:36.960
So let's create a server here.

23
00:00:36.960 --> 00:00:37.800
So let's say this is

24
00:00:37.800 --> 00:00:38.960
my server, right?

25
00:00:38.960 --> 00:00:39.680
So what happens?

26
00:00:39.680 --> 00:00:41.839
Your users send a request

27
00:00:41.839 --> 00:00:42.520
to the server.

28
00:00:42.520 --> 00:00:44.000
So this is your request.

29
00:00:44.000 --> 00:00:45.760
Your server internally

30
00:00:45.760 --> 00:00:47.440
processes this request.

31
00:00:47.440 --> 00:00:49.680
What do I mean by process?

32
00:00:49.680 --> 00:00:51.200
Process basically means

33
00:00:51.200 --> 00:00:52.720
to do something on this

34
00:00:52.720 --> 00:00:53.880
particular request, right?

35
00:00:53.880 --> 00:00:55.120
It's your application logic.

36
00:00:55.120 --> 00:00:57.080
For example, this can be anything

37
00:00:57.080 --> 00:00:59.060
for examp, this can be talking

38
00:00:59.060 --> 00:01:00.940
to database, maybe a DB query.

39
00:01:00.940 --> 00:01:03.180
So user is asking for all the books.

40
00:01:03.180 --> 00:01:05.060
So you have to make a DB query

41
00:01:05.060 --> 00:01:06.780
to get all the books.

42
00:01:06.780 --> 00:01:08.580
This can be a DB mutation.

43
00:01:08.580 --> 00:01:09.340
Okay.

44
00:01:09.340 --> 00:01:10.820
This can be something like,

45
00:01:10.820 --> 00:01:11.940
you know, authentication.

46
00:01:11.940 --> 00:01:13.739
This can be a, signup request.

47
00:01:13.739 --> 00:01:16.060
This can be a simple validation.

48
00:01:16.060 --> 00:01:17.820
So anything is basically a part

49
00:01:17.820 --> 00:01:18.780
of your processing.

50
00:01:18.780 --> 00:01:20.780
Okay, now to do this particular

51
00:01:20.780 --> 00:01:22.860
processing, your system, your

52
00:01:22.860 --> 00:01:25.300
server is connected to a database.

53
00:01:25.300 --> 00:01:26.020
So let's say you have

54
00:01:26.020 --> 00:01:27.260
a database here.

55
00:01:27.260 --> 00:01:29.100
So we are using postgres database,

56
00:01:29.100 --> 00:01:30.760
but it can be any database.

57
00:01:30.760 --> 00:01:32.120
So you are basically have

58
00:01:32.120 --> 00:01:33.720
a connection with the database.

59
00:01:33.720 --> 00:01:35.720
So you use this for primarily

60
00:01:35.720 --> 00:01:36.600
storing something, right?

61
00:01:36.600 --> 00:01:37.720
To store your data and to

62
00:01:37.720 --> 00:01:38.680
retrieve the data.

63
00:01:38.680 --> 00:01:40.120
And once the request is

64
00:01:40.120 --> 00:01:42.080
processed, you send back something

65
00:01:42.080 --> 00:01:43.640
known as a response.

66
00:01:43.640 --> 00:01:45.880
Okay, so this is how a typical

67
00:01:45.880 --> 00:01:47.000
system design works.

68
00:01:47.000 --> 00:01:47.920
And let me just reduce

69
00:01:47.920 --> 00:01:48.840
this to a, medium.

70
00:01:48.840 --> 00:01:50.200
Yeah, now this looks good.

71
00:01:50.200 --> 00:01:51.080
So what happens?

72
00:01:51.720 --> 00:01:53.320
A user sends a, request

73
00:01:53.320 --> 00:01:55.120
to the server, server processes

74
00:01:55.120 --> 00:01:56.800
this particular request and then

75
00:01:56.800 --> 00:01:58.360
sends back a response.

76
00:01:58.360 --> 00:01:59.920
And this is known as a request,

77
00:02:00.680 --> 00:02:02.200
response cycle.

78
00:02:02.200 --> 00:02:03.960
This is the simplest system

79
00:02:03.960 --> 00:02:05.640
design diagram that you can see.

80
00:02:05.640 --> 00:02:08.120
Okay, now what happens

81
00:02:08.120 --> 00:02:09.320
here is a problem.

82
00:02:09.320 --> 00:02:11.640
The problem is what happens when

83
00:02:11.640 --> 00:02:13.680
your users tend to scale,

84
00:02:13.680 --> 00:02:15.320
when you have a lot of users.

85
00:02:15.320 --> 00:02:16.480
Right now there was only one

86
00:02:16.480 --> 00:02:18.280
user, and your system was able

87
00:02:18.280 --> 00:02:19.640
to interact and was able

88
00:02:19.640 --> 00:02:21.160
to process this request.

89
00:02:21.160 --> 00:02:22.800
But the problem happens when

90
00:02:22.800 --> 00:02:24.930
you have a lot of users.

91
00:02:24.930 --> 00:02:26.090
Even I will not, I'll not

92
00:02:26.090 --> 00:02:27.130
say millions of users.

93
00:02:27.130 --> 00:02:28.570
Even if you have hundreds of

94
00:02:28.570 --> 00:02:30.610
users, which is a very small number,

95
00:02:30.610 --> 00:02:31.970
your server might crash.

96
00:02:31.970 --> 00:02:33.250
Your server can crash

97
00:02:33.250 --> 00:02:34.330
for many reasons.

98
00:02:34.330 --> 00:02:36.050
Maybe your server was not capable

99
00:02:36.050 --> 00:02:37.250
of you, know, handling

100
00:02:37.250 --> 00:02:39.170
100 requests, your server

101
00:02:39.170 --> 00:02:41.490
didn't have enough resources.

102
00:02:41.490 --> 00:02:42.930
So this is where your system

103
00:02:42.930 --> 00:02:45.050
actually starts to crash.

104
00:02:45.050 --> 00:02:46.610
And this is where the system

105
00:02:46.610 --> 00:02:48.690
design as a subject comes in.

106
00:02:48.690 --> 00:02:50.730
Okay, now let's do one thing.

107
00:02:50.730 --> 00:02:52.490
Let's quickly analyze that, you know,

108
00:02:52.490 --> 00:02:54.050
how these systems are internally

109
00:02:54.050 --> 00:02:55.200
working and all that stuff.

110
00:02:55.990 --> 00:02:56.950
What is this server?

111
00:02:56.950 --> 00:02:58.110
Tell me just in one line,

112
00:02:58.110 --> 00:02:58.990
what is the server?

113
00:02:58.990 --> 00:03:00.510
Can I say that this server is

114
00:03:00.510 --> 00:03:02.710
nothing but just a physical machine.

115
00:03:02.710 --> 00:03:03.790
At the end of the day,

116
00:03:03.790 --> 00:03:05.270
it's just a physical machine

117
00:03:05.270 --> 00:03:06.710
running on a power.

118
00:03:06.710 --> 00:03:08.630
Now this machine, a physical

119
00:03:08.630 --> 00:03:10.390
machine running on a power

120
00:03:10.390 --> 00:03:11.990
which is connected to an Internet.

121
00:03:11.990 --> 00:03:12.910
Let's say this machine

122
00:03:12.910 --> 00:03:14.150
has two CPU, okay?

123
00:03:14.150 --> 00:03:15.390
And the configuration is

124
00:03:15.390 --> 00:03:17.350
that it has a 4GB of RAM.

125
00:03:17.350 --> 00:03:20.150
Now this particular machine is, you

126
00:03:20.150 --> 00:03:22.270
know, somewhere, maybe it is at my

127
00:03:22.270 --> 00:03:24.240
home, maybe it is in a data center.

128
00:03:24.240 --> 00:03:26.880
And it has a, 24 by 7 power supply.

129
00:03:26.880 --> 00:03:29.840
Right, 24 by 7, power supply.

130
00:03:29.840 --> 00:03:31.800
Okay, so let me just, write it down.

131
00:03:31.800 --> 00:03:32.720
Power supply.

132
00:03:32.720 --> 00:03:34.760
And it has an Internet connection.

133
00:03:34.760 --> 00:03:36.800
It has a public Internet connection.

134
00:03:36.800 --> 00:03:38.560
Because only then, only then

135
00:03:38.560 --> 00:03:39.880
the users can basically come

136
00:03:39.880 --> 00:03:41.400
to this particular machine.

137
00:03:41.400 --> 00:03:43.640
Okay, When I talk about Internet

138
00:03:43.640 --> 00:03:45.760
connection and public availability,

139
00:03:45.760 --> 00:03:47.000
can I also say that this

140
00:03:47.000 --> 00:03:48.800
machine will have an IP address?

141
00:03:48.800 --> 00:03:50.080
Let's say the IP address of this

142
00:03:50.080 --> 00:03:52.240
particular machine is 2.3.4.5.

143
00:03:52.240 --> 00:03:52.580
Okay?

144
00:03:52.580 --> 00:03:54.510
So just taking a random example.

145
00:03:54.510 --> 00:03:56.830
So what happens is these users, in

146
00:03:56.830 --> 00:03:59.350
order to reach to your server, they

147
00:03:59.350 --> 00:04:00.950
need to know the IP address, right?

148
00:04:00.950 --> 00:04:03.470
You have to publicly tell that, hey,

149
00:04:03.470 --> 00:04:06.070
my IP address is 2.3.4.5.

150
00:04:06.070 --> 00:04:07.790
So if you want to visit my website,

151
00:04:07.790 --> 00:04:09.190
please open this particular

152
00:04:09.190 --> 00:04:10.830
IP address on your browser.

153
00:04:11.390 --> 00:04:12.870
But do you really think that

154
00:04:12.870 --> 00:04:14.070
this is a really nice way

155
00:04:14.070 --> 00:04:15.470
to promote your server?

156
00:04:15.470 --> 00:04:16.670
Is this a really nice way

157
00:04:16.670 --> 00:04:18.110
to promote your application?

158
00:04:18.110 --> 00:04:19.829
Can users really remember

159
00:04:19.829 --> 00:04:20.670
your IP address?

160
00:04:20.670 --> 00:04:21.070
No.

161
00:04:21.860 --> 00:04:23.500
So what you can do is you can

162
00:04:23.500 --> 00:04:25.540
actually buy a domain, right?

163
00:04:25.540 --> 00:04:27.580
So let's say I can buy a domain that

164
00:04:27.580 --> 00:04:30.900
is piyushgurk.dev and what I want is

165
00:04:30.900 --> 00:04:33.220
that whenever someone visits this

166
00:04:33.220 --> 00:04:35.660
particular domain, piushkurk.dev it

167
00:04:35.660 --> 00:04:37.499
actually, it should basically

168
00:04:37.499 --> 00:04:39.340
redirect the users to this

169
00:04:39.340 --> 00:04:40.580
particular machine.

170
00:04:40.580 --> 00:04:42.900
But wait, how can this

171
00:04:42.900 --> 00:04:43.620
be even possible?

172
00:04:43.620 --> 00:04:45.460
How can magically just typing

173
00:04:45.460 --> 00:04:47.780
pushkube.dev in the browser can

174
00:04:47.780 --> 00:04:49.660
actually redirect the user to this

175
00:04:49.660 --> 00:04:52.300
server which is running on 2.3.4.5.

176
00:04:52.300 --> 00:04:53.500
So the answer is actually

177
00:04:53.500 --> 00:04:54.620
it is not possible.

178
00:04:54.620 --> 00:04:56.420
This is where, your first system

179
00:04:56.420 --> 00:04:57.540
design component comes in.

180
00:04:57.540 --> 00:04:58.740
That is a DNS server.

181
00:04:58.740 --> 00:04:59.060
Okay?

182
00:04:59.060 --> 00:05:00.100
The full form for DNS

183
00:05:00.100 --> 00:05:01.980
is Domain Name System.

184
00:05:02.540 --> 00:05:04.100
So think of it as

185
00:05:04.100 --> 00:05:06.180
a public phone book, okay?

186
00:05:06.180 --> 00:05:07.580
It's a public phone book

187
00:05:07.580 --> 00:05:09.540
which is a public database,

188
00:05:09.540 --> 00:05:12.460
okay, which stores which domain

189
00:05:12.460 --> 00:05:14.140
has what IP address.

190
00:05:14.140 --> 00:05:16.700
So this public domain name system

191
00:05:16.700 --> 00:05:18.580
has a phone book, is a large

192
00:05:18.580 --> 00:05:20.400
database which knows that

193
00:05:20.400 --> 00:05:22.240
piyushka.dev has this IP address.

194
00:05:22.240 --> 00:05:24.040
Google.com has this IP address.

195
00:05:24.040 --> 00:05:25.520
So it basically has records

196
00:05:25.520 --> 00:05:27.880
of all the websites on the Internet.

197
00:05:27.880 --> 00:05:29.520
So in your browser when you

198
00:05:29.520 --> 00:05:30.760
very first time type

199
00:05:30.760 --> 00:05:32.880
in piushka dot dev, your browser

200
00:05:32.880 --> 00:05:34.200
has no idea where to go.

201
00:05:34.200 --> 00:05:35.560
So your browser

202
00:05:35.560 --> 00:05:38.360
makes a request to a DNS server.

203
00:05:38.360 --> 00:05:39.360
This step is known as

204
00:05:39.360 --> 00:05:40.440
a DNS resolution.

205
00:05:40.440 --> 00:05:41.080
Okay?

206
00:05:41.080 --> 00:05:43.280
Your DNS server returns this

207
00:05:43.280 --> 00:05:44.400
particular IP address that

208
00:05:44.400 --> 00:05:46.090
hey, from for piushka.dev

209
00:05:46.090 --> 00:05:47.250
this is the IP address.

210
00:05:47.250 --> 00:05:48.650
And now your browser is

211
00:05:48.650 --> 00:05:49.690
basically redirected

212
00:05:49.690 --> 00:05:51.090
to this particular server.

213
00:05:51.090 --> 00:05:53.050
So whenever you type google.com you

214
00:05:53.050 --> 00:05:54.250
are actually not interacting with

215
00:05:54.250 --> 00:05:56.210
google.com your request goes to a

216
00:05:56.210 --> 00:05:59.170
DNS server, DNS server first returns

217
00:05:59.170 --> 00:06:01.410
an IP address and then internally

218
00:06:01.410 --> 00:06:03.130
your browser redirects you to that

219
00:06:03.130 --> 00:06:04.050
IP address.

220
00:06:04.050 --> 00:06:05.530
Because by name you

221
00:06:05.530 --> 00:06:06.690
cannot reach any server.

222
00:06:06.690 --> 00:06:08.930
You need a, physical IP address

223
00:06:08.930 --> 00:06:10.010
and it is very hard

224
00:06:10.010 --> 00:06:11.410
to remember IP addresses.

225
00:06:11.410 --> 00:06:12.690
That is where the DNS

226
00:06:12.690 --> 00:06:13.910
server really shines in.

227
00:06:13.910 --> 00:06:15.760
Okay, now you might be thinking,

228
00:06:15.760 --> 00:06:16.870
it's an overkill, right?

229
00:06:16.870 --> 00:06:18.270
For every domain you need to make

230
00:06:18.270 --> 00:06:20.390
a DNS query, the answer is no.

231
00:06:20.390 --> 00:06:21.070
There is something

232
00:06:21.070 --> 00:06:22.710
known as DNS caching.

233
00:06:22.710 --> 00:06:24.710
So your browser, whenever you type

234
00:06:24.710 --> 00:06:27.390
a URL, if it doesn't have it in

235
00:06:27.390 --> 00:06:29.270
the cache, that means it's a first

236
00:06:29.270 --> 00:06:30.830
request, it goes to the DNS

237
00:06:30.830 --> 00:06:32.470
server, asks for the IP address

238
00:06:32.470 --> 00:06:34.950
and then it stores locally on your

239
00:06:34.950 --> 00:06:35.670
machine.

240
00:06:35.670 --> 00:06:37.470
Okay, it caches that particular

241
00:06:37.470 --> 00:06:38.870
value on your machine so

242
00:06:38.870 --> 00:06:40.470
that you don't have to do the DNS

243
00:06:40.470 --> 00:06:41.820
resolution step again.

244
00:06:41.820 --> 00:06:43.500
So, which basically saves you some

245
00:06:43.500 --> 00:06:45.300
milliseconds and it also saves

246
00:06:45.300 --> 00:06:46.660
some load on the DNS server.

247
00:06:46.660 --> 00:06:48.780
Okay, so this is how your DNS server

248
00:06:48.780 --> 00:06:50.820
works and this is how your users

249
00:06:50.820 --> 00:06:52.220
are redirected to your server.

250
00:06:52.220 --> 00:06:53.140
So this is your single

251
00:06:53.140 --> 00:06:55.100
server and a, database.

252
00:06:55.100 --> 00:06:56.900
Now this particular video was

253
00:06:56.900 --> 00:06:58.220
on DNS server and you

254
00:06:58.220 --> 00:06:59.660
know, just a kickstart

255
00:06:59.660 --> 00:07:01.020
on the system design topic.

256
00:07:01.020 --> 00:07:02.220
This is going to be really complex.

257
00:07:02.220 --> 00:07:03.020
We are going to grow

258
00:07:03.020 --> 00:07:04.140
this system a lot.

259
00:07:04.140 --> 00:07:05.260
So be with me.

260
00:07:05.260 --> 00:07:06.780
So right now we just know one

261
00:07:06.780 --> 00:07:08.460
problem that you know, we just have

262
00:07:08.460 --> 00:07:10.580
single machine and because you know

263
00:07:10.580 --> 00:07:12.900
our DNS is redirecting the user to

264
00:07:12.900 --> 00:07:14.640
this machine and as the user

265
00:07:14.640 --> 00:07:16.880
increases, my system crashes, my

266
00:07:16.880 --> 00:07:17.800
machine crashes.

267
00:07:17.800 --> 00:07:20.120
Because 2 CPU 4GB RAM is such

268
00:07:20.120 --> 00:07:21.280
a small configuration, 100

269
00:07:21.280 --> 00:07:22.960
requests come in and that's it.

270
00:07:22.960 --> 00:07:24.840
My server is gone.

271
00:07:24.840 --> 00:07:26.120
So in the next video,

272
00:07:26.120 --> 00:07:28.200
let's see how can I solve this

273
00:07:28.200 --> 00:07:29.839
particular problem using something

274
00:07:29.839 --> 00:07:31.560
known as scaling policies.

275
00:07:31.560 --> 00:07:32.840
So let's meet you right there.
