WEBVTT

1
00:00:00.160 --> 00:00:01.000
All right, guys.

2
00:00:01.000 --> 00:00:01.680
Hi.

3
00:00:01.680 --> 00:00:03.440
So, in this particular video,

4
00:00:03.440 --> 00:00:06.160
let's start by coding a basic

5
00:00:06.160 --> 00:00:08.800
authentication system using

6
00:00:08.800 --> 00:00:11.520
the story one, then improving it

7
00:00:11.520 --> 00:00:13.320
with story two, and further

8
00:00:13.320 --> 00:00:15.000
improving it with story three.

9
00:00:15.000 --> 00:00:16.720
And finally the last set

10
00:00:16.720 --> 00:00:17.880
of the story, how we can

11
00:00:17.880 --> 00:00:19.480
make it fully optimized.

12
00:00:19.480 --> 00:00:22.200
Okay, So I have made a very simple

13
00:00:22.200 --> 00:00:24.320
project that is authentication 01.

14
00:00:24.320 --> 00:00:26.860
So first things first, npm

15
00:00:26.860 --> 00:00:28.540
init in your integrated terminal.

16
00:00:28.540 --> 00:00:29.060
Right.

17
00:00:29.060 --> 00:00:30.380
So authentication 01.

18
00:00:30.380 --> 00:00:31.060
I'll just do enter,

19
00:00:31.060 --> 00:00:32.180
enter, enter and enter.

20
00:00:32.180 --> 00:00:33.300
Everything is good.

21
00:00:33.300 --> 00:00:34.900
So let's install couple of things.

22
00:00:34.900 --> 00:00:35.180
Right?

23
00:00:35.180 --> 00:00:38.260
npm install express is first thing.

24
00:00:38.260 --> 00:00:41.220
And please do mention at the rate 4.

25
00:00:41.220 --> 00:00:41.940
Okay.

26
00:00:41.940 --> 00:00:43.820
4 point x, because you know, we want

27
00:00:43.820 --> 00:00:45.660
to install express at 4 so that

28
00:00:45.660 --> 00:00:47.620
you don't get into any trouble.

29
00:00:47.620 --> 00:00:48.340
Nice.

30
00:00:48.340 --> 00:00:50.260
Now because we also want typings.

31
00:00:50.260 --> 00:00:51.660
Okay, we also want typing.

32
00:00:51.660 --> 00:00:53.140
So I'll just say npm install

33
00:00:53.690 --> 00:00:57.130
at the rate types node at the rate

34
00:00:57.130 --> 00:01:00.850
types express at 4.0 so that I

35
00:01:00.850 --> 00:01:03.130
can get the IDE recommendations.

36
00:01:03.130 --> 00:01:04.489
And don't forget to save

37
00:01:04.489 --> 00:01:06.090
it as a dev dependency.

38
00:01:06.090 --> 00:01:07.130
So after this particular

39
00:01:07.130 --> 00:01:08.250
command, this is what my

40
00:01:08.250 --> 00:01:09.890
package JSON looks like.

41
00:01:09.890 --> 00:01:11.570
So you can see in the dependencies,

42
00:01:11.570 --> 00:01:12.490
I only have Express

43
00:01:12.490 --> 00:01:13.770
at this particular version.

44
00:01:13.770 --> 00:01:15.490
I have dev dependencies at,

45
00:01:15.490 --> 00:01:16.490
this particular version

46
00:01:16.490 --> 00:01:18.010
and this particular version.

47
00:01:18.010 --> 00:01:18.490
Nice.

48
00:01:19.130 --> 00:01:20.090
Now let's get started

49
00:01:20.090 --> 00:01:22.150
by creating an index js file.

50
00:01:22.700 --> 00:01:24.260
So first things first, I just want to

51
00:01:24.260 --> 00:01:25.820
basically create an express server.

52
00:01:25.820 --> 00:01:26.380
Okay.

53
00:01:26.380 --> 00:01:28.220
So I can just say import.

54
00:01:28.220 --> 00:01:31.660
Okay, Import express from express.

55
00:01:31.660 --> 00:01:32.380
Nice.

56
00:01:32.380 --> 00:01:33.620
Then I can just create

57
00:01:33.620 --> 00:01:35.420
an app which is express.

58
00:01:35.420 --> 00:01:36.700
Okay, that's also good.

59
00:01:36.700 --> 00:01:38.860
And let's create a port also.

60
00:01:38.860 --> 00:01:41.900
So const port, is equals to I.

61
00:01:41.900 --> 00:01:43.700
I'll just say 8,000 that is okay.

62
00:01:43.700 --> 00:01:46.540
And app dot listen.

63
00:01:46.540 --> 00:01:47.780
On which particular port?

64
00:01:47.780 --> 00:01:48.700
This particular port.

65
00:01:48.700 --> 00:01:49.040
And.

66
00:01:49.040 --> 00:01:50.560
And a callback function

67
00:01:50.560 --> 00:01:52.320
saying console log.

68
00:01:52.920 --> 00:01:53.960
Let me just zoom in a little

69
00:01:53.960 --> 00:01:54.640
bit for you so that

70
00:01:54.640 --> 00:01:55.640
you can see this clearly.

71
00:01:55.640 --> 00:01:55.920
Right.

72
00:01:55.920 --> 00:01:57.200
I hope this is fine.

73
00:01:57.200 --> 00:01:58.440
So console log.

74
00:01:58.440 --> 00:02:00.800
And I can just say, you know,

75
00:02:00.800 --> 00:02:02.160
server started

76
00:02:02.720 --> 00:02:06.320
on port and just add the port here.

77
00:02:06.320 --> 00:02:06.800
Nice.

78
00:02:07.520 --> 00:02:08.880
Now what is the next step?

79
00:02:08.880 --> 00:02:10.560
Let's create some routes.

80
00:02:10.560 --> 00:02:11.280
Okay.

81
00:02:11.280 --> 00:02:13.520
Now, as a part of authentication,

82
00:02:13.520 --> 00:02:14.240
of course, you

83
00:02:14.240 --> 00:02:15.680
need a login route, right?

84
00:02:15.680 --> 00:02:17.080
So what do you mean by login?

85
00:02:17.080 --> 00:02:18.360
Login basically means that

86
00:02:18.360 --> 00:02:19.160
you are going to give me

87
00:02:19.160 --> 00:02:20.620
your username password.

88
00:02:20.620 --> 00:02:21.780
That means you are trying

89
00:02:21.780 --> 00:02:22.860
to authenticate.

90
00:02:22.860 --> 00:02:24.260
You are bringing back a token.

91
00:02:24.260 --> 00:02:26.380
Okay, I'll create one more route.

92
00:02:26.380 --> 00:02:28.460
Let's say, you know, sign up.

93
00:02:28.460 --> 00:02:29.660
Okay, let's say sign up.

94
00:02:29.660 --> 00:02:30.500
So this is, is going

95
00:02:30.500 --> 00:02:31.900
to be your sign up route.

96
00:02:31.900 --> 00:02:33.700
And sign up is basically like, you

97
00:02:33.700 --> 00:02:35.580
know, taking your car and parking

98
00:02:35.580 --> 00:02:37.500
it creating a new car sign up.

99
00:02:37.500 --> 00:02:39.540
And I'll just create one

100
00:02:39.540 --> 00:02:40.420
more route that is me.

101
00:02:40.420 --> 00:02:41.900
Me basically returns that.

102
00:02:41.900 --> 00:02:44.460
Who are you on the server?

103
00:02:44.460 --> 00:02:46.060
Can I recognize you or not?

104
00:02:46.060 --> 00:02:47.340
Is going to be the me route.

105
00:02:48.270 --> 00:02:49.350
So now see what we are going

106
00:02:49.350 --> 00:02:51.470
to do is app dot get.

107
00:02:51.470 --> 00:02:55.070
Okay, first let's sorry app dot post.

108
00:02:55.070 --> 00:02:57.550
Let's create a route that is sign up.

109
00:02:58.110 --> 00:02:58.630
Okay?

110
00:02:58.630 --> 00:02:59.710
Now what is the sign up?

111
00:02:59.710 --> 00:03:01.230
Sign up basically means

112
00:03:01.230 --> 00:03:03.950
that hey, here is my car.

113
00:03:04.670 --> 00:03:07.630
Here is my car, okay?

114
00:03:07.630 --> 00:03:11.870
Please park it and give

115
00:03:11.870 --> 00:03:14.490
me back a token that is

116
00:03:14.490 --> 00:03:15.530
your sign up, correct?

117
00:03:15.530 --> 00:03:16.810
That is how you sign up.

118
00:03:16.810 --> 00:03:18.860
So in the sign up, okay, one,

119
00:03:18.860 --> 00:03:19.890
what will you give me?

120
00:03:19.890 --> 00:03:20.930
Okay, so what are you

121
00:03:20.930 --> 00:03:21.490
going to give me?

122
00:03:21.490 --> 00:03:22.210
You are going to give

123
00:03:22.210 --> 00:03:23.290
me your credentials.

124
00:03:23.290 --> 00:03:25.050
Okay, so a callback function.

125
00:03:25.050 --> 00:03:26.210
So I'll just say hey, this is

126
00:03:26.210 --> 00:03:27.770
request, this is a response.

127
00:03:27.770 --> 00:03:30.170
So I'll just take some data

128
00:03:30.170 --> 00:03:31.690
from the request body.

129
00:03:31.690 --> 00:03:33.850
What, what I want, I want.

130
00:03:33.850 --> 00:03:35.370
Okay, when you bring your car

131
00:03:35.930 --> 00:03:37.210
basically your data,

132
00:03:37.210 --> 00:03:39.050
I want your first name, okay?

133
00:03:39.050 --> 00:03:40.330
And let's just call it as name.

134
00:03:41.330 --> 00:03:42.770
And you can give me your email

135
00:03:42.770 --> 00:03:45.170
and you can give me your password.

136
00:03:45.170 --> 00:03:46.530
So email is basically

137
00:03:46.530 --> 00:03:47.890
like your car's number.

138
00:03:47.890 --> 00:03:49.730
Okay, Just for the analogy.

139
00:03:50.610 --> 00:03:52.770
So I'll just make a new comment.

140
00:03:52.770 --> 00:03:54.450
So email is basically like

141
00:03:54.450 --> 00:03:58.050
a unique car number, right?

142
00:03:58.770 --> 00:04:01.650
So in order to have this, what I

143
00:04:01.650 --> 00:04:03.450
will do understand this thing.

144
00:04:03.450 --> 00:04:05.170
This is very important, correct?

145
00:04:05.170 --> 00:04:07.630
First of all, I have to do

146
00:04:07.630 --> 00:04:09.190
one thing that is a middleware

147
00:04:09.190 --> 00:04:11.470
app dot use, okay?

148
00:04:11.470 --> 00:04:13.430
App dot use that is express

149
00:04:13.430 --> 00:04:14.790
dot JSON because we are going

150
00:04:14.790 --> 00:04:16.310
to talk in the JSON format.

151
00:04:16.870 --> 00:04:18.430
Now what I can do here is if

152
00:04:18.430 --> 00:04:19.910
you think about it, I have

153
00:04:19.910 --> 00:04:21.670
to create a user, right?

154
00:04:21.670 --> 00:04:24.390
Basically I need my diary.

155
00:04:24.390 --> 00:04:24.870
Okay?

156
00:04:24.870 --> 00:04:26.550
Const diary.

157
00:04:26.550 --> 00:04:28.230
Eventually it can be a database also.

158
00:04:28.230 --> 00:04:29.310
But as of now let's go

159
00:04:29.310 --> 00:04:30.230
with this thing diary.

160
00:04:30.790 --> 00:04:32.470
So what I can do is first of all

161
00:04:32.470 --> 00:04:35.460
check that if this particular

162
00:04:35.460 --> 00:04:38.500
email is already in the diary.

163
00:04:38.500 --> 00:04:42.540
If email in diary this means you

164
00:04:42.540 --> 00:04:44.580
are already signed up, right?

165
00:04:44.580 --> 00:04:46.260
So you can just say return

166
00:04:46.260 --> 00:04:49.860
response status of a 400 and you

167
00:04:49.860 --> 00:04:52.580
can just say JSON and return an

168
00:04:52.580 --> 00:04:58.140
error that a user with account Or

169
00:04:58.140 --> 00:04:59.980
I can just say user, email

170
00:05:01.500 --> 00:05:03.080
already taken.

171
00:05:03.080 --> 00:05:03.980
So this particular

172
00:05:03.980 --> 00:05:05.420
email is already in the use.

173
00:05:05.980 --> 00:05:07.740
Else what will you do is

174
00:05:07.740 --> 00:05:10.460
let's create a token for this user.

175
00:05:11.500 --> 00:05:13.660
Let's create a token

176
00:05:13.660 --> 00:05:15.259
for this user, right?

177
00:05:15.259 --> 00:05:15.980
So what I.

178
00:05:15.980 --> 00:05:18.180
How can you create a token

179
00:05:18.180 --> 00:05:19.380
for this particular user?

180
00:05:19.380 --> 00:05:19.980
Tell me that.

181
00:05:19.980 --> 00:05:21.940
Okay, So I can just say I'll

182
00:05:21.940 --> 00:05:23.900
just use date.now so this

183
00:05:23.900 --> 00:05:25.420
basically returns what is my

184
00:05:25.420 --> 00:05:26.940
current date so that is a token.

185
00:05:27.530 --> 00:05:27.850
Simple.

186
00:05:27.850 --> 00:05:28.410
Okay.

187
00:05:28.410 --> 00:05:29.410
Ideally it should have

188
00:05:29.410 --> 00:05:31.010
to be some kind of id, but this

189
00:05:31.010 --> 00:05:32.050
is my id let's say.

190
00:05:32.050 --> 00:05:33.570
Okay, now here is the one

191
00:05:33.570 --> 00:05:34.690
thing that I have done wrong.

192
00:05:34.690 --> 00:05:36.050
Let's create a diary and let's

193
00:05:36.050 --> 00:05:37.770
create a new set of emails

194
00:05:37.770 --> 00:05:39.130
which are already taken.

195
00:05:39.130 --> 00:05:40.330
So emails is basically

196
00:05:40.330 --> 00:05:41.690
going to be a new set.

197
00:05:41.690 --> 00:05:42.250
Okay.

198
00:05:43.370 --> 00:05:48.650
Okay, so let's say if emails dot has

199
00:05:48.650 --> 00:05:50.410
okay, this particular email.

200
00:05:50.410 --> 00:05:52.370
Now if it is not there, what I'm

201
00:05:52.370 --> 00:05:53.770
going to do is I'm going to just

202
00:05:53.770 --> 00:05:56.670
say hey, in my diary, in my diary

203
00:05:57.230 --> 00:05:59.790
at this particular token, whatever

204
00:05:59.790 --> 00:06:01.190
you have created, I am going to

205
00:06:01.190 --> 00:06:03.790
say hey, this is your name, this

206
00:06:03.790 --> 00:06:06.150
is your email and this is your

207
00:06:06.150 --> 00:06:06.830
password.

208
00:06:06.830 --> 00:06:08.390
Okay, I have basically

209
00:06:08.390 --> 00:06:09.590
made a diary entry.

210
00:06:09.590 --> 00:06:14.110
Okay, so create a token for user.

211
00:06:14.110 --> 00:06:15.550
A token for user.

212
00:06:15.550 --> 00:06:17.750
Okay, I have made a token and then

213
00:06:17.750 --> 00:06:20.830
I can just say do a diary entry.

214
00:06:20.830 --> 00:06:25.500
Okay, do a entry in diary.

215
00:06:25.500 --> 00:06:26.500
Okay, very nice.

216
00:06:26.500 --> 00:06:28.780
And then, then what, what's next?

217
00:06:29.660 --> 00:06:31.820
One more thing also you have to say

218
00:06:31.820 --> 00:06:34.060
emails.add okay, this particular

219
00:06:34.060 --> 00:06:35.540
email and finally you can

220
00:06:35.540 --> 00:06:38.380
just return response.JSON saying

221
00:06:39.240 --> 00:06:41.820
status is let's say success.

222
00:06:41.820 --> 00:06:43.260
And then you can also return

223
00:06:43.260 --> 00:06:45.100
his token that hey, hey bro.

224
00:06:45.100 --> 00:06:46.380
That this is your token.

225
00:06:46.380 --> 00:06:47.900
Every time you have to come back,

226
00:06:47.900 --> 00:06:48.820
you have to come back

227
00:06:48.820 --> 00:06:50.820
with this particular token.

228
00:06:50.820 --> 00:06:51.460
Nice.

229
00:06:51.460 --> 00:06:52.660
So this is what I have done.

230
00:06:52.660 --> 00:06:54.340
This is what we basically discussed.

231
00:06:54.340 --> 00:06:55.420
So just see, just go through

232
00:06:55.420 --> 00:06:56.660
the code once what we are doing,

233
00:06:57.220 --> 00:06:59.460
make a diary, make email set.

234
00:06:59.460 --> 00:07:01.700
If user has already signed up using

235
00:07:01.700 --> 00:07:03.340
this email you return a new error.

236
00:07:03.340 --> 00:07:05.140
Else create a new token.

237
00:07:05.140 --> 00:07:07.780
Okay, do a diary entry, add to

238
00:07:07.780 --> 00:07:09.580
the email set and return the token.

239
00:07:09.580 --> 00:07:10.900
So this is basically what I have

240
00:07:10.900 --> 00:07:12.420
made which I told you here.

241
00:07:12.420 --> 00:07:14.740
So you take a token, you basically do

242
00:07:14.740 --> 00:07:16.590
a diary entry and return it back.

243
00:07:16.590 --> 00:07:16.910
Nice.

244
00:07:17.630 --> 00:07:21.390
Now let's create a route app dot get.

245
00:07:21.390 --> 00:07:23.710
Okay, let's say a me route

246
00:07:23.710 --> 00:07:25.830
slash me me is basically

247
00:07:25.830 --> 00:07:27.270
what that I will tell you.

248
00:07:27.270 --> 00:07:28.510
Who are you if you want

249
00:07:28.510 --> 00:07:29.870
to take back your car.

250
00:07:29.870 --> 00:07:31.030
It's kind of like you want

251
00:07:31.030 --> 00:07:31.910
to take back your car.

252
00:07:31.910 --> 00:07:35.470
Okay, so request and response.

253
00:07:36.270 --> 00:07:38.910
So whenever you come back, what

254
00:07:38.910 --> 00:07:40.350
I am basically saying you.

255
00:07:40.350 --> 00:07:41.870
Okay, now listen to this thing.

256
00:07:42.420 --> 00:07:44.100
Whenever you come back

257
00:07:44.100 --> 00:07:46.260
you have to bring your token.

258
00:07:46.900 --> 00:07:48.540
See now in this particular story,

259
00:07:48.540 --> 00:07:50.340
if any user wants to take his car

260
00:07:50.340 --> 00:07:52.420
back, he has to bring his token.

261
00:07:52.420 --> 00:07:54.020
So I'll just say that hey,

262
00:07:54.020 --> 00:07:56.620
in the request body you have

263
00:07:56.620 --> 00:07:58.100
to bring your token back.

264
00:07:58.820 --> 00:08:00.100
If there is no token.

265
00:08:00.100 --> 00:08:01.580
If no token is there?

266
00:08:01.580 --> 00:08:02.900
I'm just going to say return

267
00:08:02.900 --> 00:08:04.580
response status.

268
00:08:04.580 --> 00:08:07.780
Hey, it's a bad Request JSON.

269
00:08:07.780 --> 00:08:09.350
That error is basically

270
00:08:09.910 --> 00:08:12.230
missing token.

271
00:08:12.230 --> 00:08:14.870
Okay, Missing token, which is good.

272
00:08:14.870 --> 00:08:16.110
Else what I will do, I

273
00:08:16.110 --> 00:08:17.310
will search my diary.

274
00:08:17.310 --> 00:08:18.950
So I'll just say const.

275
00:08:18.950 --> 00:08:19.990
Okay, I'll just search

276
00:08:19.990 --> 00:08:21.190
for this token in my diary.

277
00:08:21.190 --> 00:08:23.750
If Token.

278
00:08:23.750 --> 00:08:27.510
Okay, in diary.

279
00:08:27.510 --> 00:08:29.270
So let's say if you're not able to

280
00:08:29.270 --> 00:08:31.870
find this, if token in diary is not

281
00:08:31.870 --> 00:08:34.159
there, okay, then that means, hey,

282
00:08:34.159 --> 00:08:35.240
you have just bought a token which

283
00:08:35.240 --> 00:08:37.080
is not in my id, which means you are

284
00:08:37.080 --> 00:08:37.440
not.

285
00:08:37.440 --> 00:08:38.760
This is not a valid token.

286
00:08:38.760 --> 00:08:40.159
Okay, you have

287
00:08:40.159 --> 00:08:41.600
bought a different token.

288
00:08:41.600 --> 00:08:43.440
So I'll just say invalid token.

289
00:08:44.320 --> 00:08:45.240
Invalid token.

290
00:08:45.240 --> 00:08:46.160
I don't have an entry.

291
00:08:46.160 --> 00:08:47.960
Okay, but if I have an entry,

292
00:08:47.960 --> 00:08:49.200
I'll just say const.

293
00:08:49.200 --> 00:08:52.640
Entry equals diary and add

294
00:08:52.640 --> 00:08:53.840
this particular token.

295
00:08:53.840 --> 00:08:54.920
And what I can do, I can just

296
00:08:54.920 --> 00:08:57.040
say return response JSON

297
00:08:57.040 --> 00:08:58.960
and you can just return the data

298
00:08:58.960 --> 00:09:00.000
as the entry that.

299
00:09:00.000 --> 00:09:01.850
This is what I basically store about

300
00:09:01.850 --> 00:09:02.050
you.

301
00:09:02.050 --> 00:09:02.970
That's it.

302
00:09:02.970 --> 00:09:04.250
So this is our me route.

303
00:09:04.250 --> 00:09:04.810
That's it.

304
00:09:05.610 --> 00:09:06.570
So this is your very

305
00:09:06.570 --> 00:09:07.770
simple authentication.

306
00:09:07.770 --> 00:09:08.490
Correct.

307
00:09:08.490 --> 00:09:10.810
So now if I run this particular

308
00:09:10.810 --> 00:09:12.090
application, how to run.

309
00:09:12.090 --> 00:09:13.690
So I'll just create a new start

310
00:09:13.690 --> 00:09:19.610
script and I'll say node index.

311
00:09:20.250 --> 00:09:22.090
So npm start.

312
00:09:22.090 --> 00:09:24.570
Okay, so everything has gone good.

313
00:09:24.570 --> 00:09:25.850
You can see server,

314
00:09:25.850 --> 00:09:27.050
is running on Port 8000.

315
00:09:27.050 --> 00:09:28.690
So I'll just use the Thunder client.

316
00:09:28.690 --> 00:09:29.970
Okay, so let me just create

317
00:09:29.970 --> 00:09:31.490
a new request and you can

318
00:09:31.490 --> 00:09:33.130
just ignore these requests.

319
00:09:33.130 --> 00:09:35.130
Okay, so I'll just say that.

320
00:09:35.130 --> 00:09:37.370
Hey, on localhost8000.

321
00:09:37.370 --> 00:09:37.770
Okay.

322
00:09:37.770 --> 00:09:38.970
On localhost8000,

323
00:09:39.770 --> 00:09:41.050
on which particular thing?

324
00:09:41.050 --> 00:09:43.130
On slash signup.

325
00:09:43.130 --> 00:09:43.690
Correct?

326
00:09:44.410 --> 00:09:45.049
Just a second.

327
00:09:45.049 --> 00:09:46.890
Yeah, on slash signup.

328
00:09:47.530 --> 00:09:50.490
I want to make a new post request.

329
00:09:50.490 --> 00:09:50.970
Nice.

330
00:09:50.970 --> 00:09:53.290
Okay, in the body, I'm going

331
00:09:53.290 --> 00:09:55.450
to send a JSON there I have to send

332
00:09:55.450 --> 00:09:58.940
my name, which is piyush Garg.

333
00:09:58.940 --> 00:09:59.540
Okay.

334
00:09:59.540 --> 00:10:01.020
And I will send my email,

335
00:10:01.740 --> 00:10:03.580
okay, which is piyush

336
00:10:04.540 --> 00:10:09.940
piyushgur.devmail.com and also you

337
00:10:09.940 --> 00:10:13.180
need my password which is 123456.

338
00:10:13.820 --> 00:10:14.220
Right?

339
00:10:15.500 --> 00:10:16.540
Send.

340
00:10:16.540 --> 00:10:17.580
I got a token.

341
00:10:17.580 --> 00:10:18.220
Can you see that?

342
00:10:18.220 --> 00:10:19.260
This is my unique token.

343
00:10:19.260 --> 00:10:20.460
I'll just copy this particular

344
00:10:20.460 --> 00:10:22.220
token and as of now store it here.

345
00:10:22.220 --> 00:10:23.530
This is my token.

346
00:10:23.530 --> 00:10:24.970
If I send this request again,

347
00:10:24.970 --> 00:10:26.650
email is already taken.

348
00:10:26.650 --> 00:10:28.490
It's a bad request.

349
00:10:28.490 --> 00:10:29.450
Nice.

350
00:10:29.450 --> 00:10:30.850
Now let's say if I create

351
00:10:30.850 --> 00:10:32.650
one more new request, right?

352
00:10:32.650 --> 00:10:34.730
So let me just create a new request.

353
00:10:34.730 --> 00:10:36.450
Okay, so in this particular new

354
00:10:36.450 --> 00:10:37.170
request, what I'm going

355
00:10:37.170 --> 00:10:38.330
to do is I'm just going to take

356
00:10:38.330 --> 00:10:39.610
the same thing, but I'm going

357
00:10:39.610 --> 00:10:41.610
to make a request on slash me.

358
00:10:41.610 --> 00:10:42.090
Okay?

359
00:10:42.090 --> 00:10:43.130
Slash me.

360
00:10:43.130 --> 00:10:44.970
So when I send it says hey,

361
00:10:44.970 --> 00:10:46.250
missing Token.

362
00:10:46.250 --> 00:10:48.330
Okay, so that means in the body

363
00:10:48.330 --> 00:10:49.930
I have to send a token.

364
00:10:49.930 --> 00:10:52.010
So I am sending token 1, 2, 3.

365
00:10:52.010 --> 00:10:53.490
It says invalid token.

366
00:10:53.490 --> 00:10:54.610
This is not a valid token.

367
00:10:54.610 --> 00:10:56.330
This was the valid token, right?

368
00:10:56.330 --> 00:10:58.450
So if I send this token now, you

369
00:10:58.450 --> 00:11:00.570
can see it says this is you.

370
00:11:00.570 --> 00:11:02.170
You are this particular person.

371
00:11:02.730 --> 00:11:04.410
So now what happened?

372
00:11:04.410 --> 00:11:05.290
Can.

373
00:11:05.290 --> 00:11:07.770
Let's say if I want to, okay, if I go

374
00:11:07.770 --> 00:11:09.610
back to my server, let's say what

375
00:11:09.610 --> 00:11:12.850
I want to do is I want to say that,

376
00:11:12.850 --> 00:11:15.290
you know, you want to access cars.

377
00:11:15.290 --> 00:11:16.010
Let's say you want

378
00:11:16.010 --> 00:11:17.050
to access some private data.

379
00:11:17.050 --> 00:11:18.490
So I can just say app get.

380
00:11:19.460 --> 00:11:20.860
Sorry, let's make a post out only.

381
00:11:20.860 --> 00:11:21.300
Okay.

382
00:11:21.300 --> 00:11:22.340
App dot post.

383
00:11:22.340 --> 00:11:23.420
So I'll just say that this is

384
00:11:23.420 --> 00:11:25.060
some kind of private data.

385
00:11:25.060 --> 00:11:25.620
Okay?

386
00:11:25.620 --> 00:11:27.340
This data should only be visible

387
00:11:27.340 --> 00:11:29.460
to persons who are logged in.

388
00:11:29.460 --> 00:11:31.220
Who are logged in.

389
00:11:31.220 --> 00:11:31.700
So what?

390
00:11:31.700 --> 00:11:32.660
How can I check?

391
00:11:32.660 --> 00:11:35.220
First of all, try to read the token.

392
00:11:35.220 --> 00:11:37.540
Okay, if no token or

393
00:11:37.540 --> 00:11:38.740
this thing see same.

394
00:11:38.740 --> 00:11:39.740
I'm just copy pasting

395
00:11:39.740 --> 00:11:40.900
the code, right?

396
00:11:40.900 --> 00:11:42.220
Copy pasted the same code.

397
00:11:42.220 --> 00:11:43.900
I'm just saying if no token,

398
00:11:43.900 --> 00:11:46.100
if not token in diary entry.

399
00:11:46.100 --> 00:11:47.340
Now what I can do, I can just

400
00:11:47.340 --> 00:11:48.540
say if I got the entry, then

401
00:11:48.540 --> 00:11:49.660
I can return you the data.

402
00:11:49.660 --> 00:11:51.040
So I'll just say return

403
00:11:51.040 --> 00:11:53.240
response JSON and I can just

404
00:11:53.240 --> 00:11:54.640
say the data to be what?

405
00:11:54.640 --> 00:11:57.600
I can just say you know, status.

406
00:11:58.160 --> 00:11:59.600
I can just say private data.

407
00:12:00.560 --> 00:12:04.560
Private data access granted.

408
00:12:05.280 --> 00:12:06.160
Something like this.

409
00:12:06.160 --> 00:12:07.680
So that means if you want

410
00:12:07.680 --> 00:12:09.680
to take this, right?

411
00:12:09.680 --> 00:12:12.000
If you want to make a request

412
00:12:12.000 --> 00:12:13.560
on slash private data.

413
00:12:13.560 --> 00:12:14.960
You can see I'm able to make a.

414
00:12:15.840 --> 00:12:17.200
Not able to post because I have

415
00:12:17.200 --> 00:12:18.160
to restart my server.

416
00:12:18.160 --> 00:12:19.200
Now here's a problem.

417
00:12:19.200 --> 00:12:21.230
Because I restarted my server,

418
00:12:21.230 --> 00:12:22.990
I have to sign up again, right?

419
00:12:23.550 --> 00:12:25.310
No worries, I'll just sign up again.

420
00:12:25.310 --> 00:12:27.230
This is my new token.

421
00:12:27.230 --> 00:12:28.950
Now if I try to access, you can

422
00:12:28.950 --> 00:12:30.350
see it says invalid token

423
00:12:30.350 --> 00:12:31.670
because this was the old token.

424
00:12:31.670 --> 00:12:34.190
Send private data access granted.

425
00:12:34.190 --> 00:12:35.750
If I will not send this,

426
00:12:35.750 --> 00:12:37.150
it says missing token.

427
00:12:37.150 --> 00:12:39.830
That means I am not logged in.

428
00:12:39.830 --> 00:12:41.310
I am not authenticated.

429
00:12:41.310 --> 00:12:42.670
So this was your very

430
00:12:42.670 --> 00:12:44.350
basic authentication.

431
00:12:44.350 --> 00:12:46.670
I mean in real world, this is not

432
00:12:46.670 --> 00:12:48.670
how authentication works in reality.

433
00:12:48.670 --> 00:12:50.270
But you have actually made

434
00:12:50.270 --> 00:12:52.510
a successful working authentication

435
00:12:52.510 --> 00:12:54.010
system on, on this principle.

436
00:12:54.010 --> 00:12:56.010
Okay, in reality,

437
00:12:56.570 --> 00:12:58.050
no worries, I'll walk you through.

438
00:12:58.050 --> 00:12:59.730
In reality, this diary is going

439
00:12:59.730 --> 00:13:01.290
to be what, a database?

440
00:13:01.290 --> 00:13:02.890
This diary is going to be database.

441
00:13:02.890 --> 00:13:04.050
Okay, now you're getting

442
00:13:04.050 --> 00:13:04.810
my point, right?

443
00:13:04.810 --> 00:13:05.650
And then you are going

444
00:13:05.650 --> 00:13:07.050
to generate these tokens.

445
00:13:07.850 --> 00:13:08.490
Got it?

446
00:13:09.370 --> 00:13:11.450
Okay, now coming back,

447
00:13:12.330 --> 00:13:13.610
what was the con?

448
00:13:13.610 --> 00:13:16.010
Only one guard speed was slow.

449
00:13:16.010 --> 00:13:16.890
Now here is a problem.

450
00:13:17.450 --> 00:13:19.570
See, in reality, in real

451
00:13:19.570 --> 00:13:20.690
world, what happens now?

452
00:13:20.690 --> 00:13:22.400
You don't have one server

453
00:13:22.400 --> 00:13:23.760
because one server cannot

454
00:13:23.760 --> 00:13:25.440
handle a lot of traffic.

455
00:13:25.440 --> 00:13:27.040
In reality, you actually

456
00:13:27.040 --> 00:13:29.600
spin up multiple instances

457
00:13:29.600 --> 00:13:31.040
of your same server.

458
00:13:31.040 --> 00:13:31.840
Okay.

459
00:13:31.840 --> 00:13:34.840
So when users come, when users tries

460
00:13:34.840 --> 00:13:37.280
to visit your website or server.

461
00:13:37.280 --> 00:13:39.320
So few requests are routed here,

462
00:13:39.320 --> 00:13:40.800
few requests are routed here.

463
00:13:40.800 --> 00:13:42.200
Some requests are routed here,

464
00:13:42.200 --> 00:13:43.920
some requests are routed here.

465
00:13:43.920 --> 00:13:46.640
So technically, if while he

466
00:13:46.640 --> 00:13:48.160
was logging in or he was

467
00:13:48.160 --> 00:13:49.180
creating an account,

468
00:13:49.180 --> 00:13:50.940
he redirected to this server.

469
00:13:50.940 --> 00:13:51.550
Now this server,

470
00:13:52.140 --> 00:13:53.940
basically has the token, right?

471
00:13:53.940 --> 00:13:55.700
In his states, in this particular

472
00:13:55.700 --> 00:13:58.060
diary, this server, contains it.

473
00:13:58.060 --> 00:13:59.620
But when he tries to access

474
00:13:59.620 --> 00:14:01.260
the private data, the request was

475
00:14:01.260 --> 00:14:02.740
routed to this particular server.

476
00:14:02.740 --> 00:14:03.820
So what happens?

477
00:14:03.820 --> 00:14:05.580
Does this server know

478
00:14:05.580 --> 00:14:07.300
that this token means this user?

479
00:14:07.300 --> 00:14:07.580
No.

480
00:14:07.580 --> 00:14:07.900
Right.

481
00:14:07.900 --> 00:14:08.860
So that is a problem.

482
00:14:08.860 --> 00:14:10.540
That means this particular

483
00:14:10.540 --> 00:14:13.580
approach is not scalable.

484
00:14:13.580 --> 00:14:14.220
Why?

485
00:14:14.220 --> 00:14:16.060
Because if, you want to go with

486
00:14:16.060 --> 00:14:17.700
this approach, you have to make sure

487
00:14:17.700 --> 00:14:19.700
you always and always have only

488
00:14:19.700 --> 00:14:21.960
and only one server running.

489
00:14:21.960 --> 00:14:23.720
Because this server maintains

490
00:14:23.720 --> 00:14:25.880
a state, a diary,

491
00:14:25.880 --> 00:14:27.400
this server contains the data.

492
00:14:27.400 --> 00:14:29.200
So all the requests must be

493
00:14:29.200 --> 00:14:31.000
handled by a single server.

494
00:14:31.000 --> 00:14:33.160
So this approach of making a diary

495
00:14:33.160 --> 00:14:36.200
and emails is not at all scalable.

496
00:14:36.200 --> 00:14:38.440
It is not at all scalable, right.

497
00:14:38.440 --> 00:14:40.040
So scalability is an issue.

498
00:14:40.040 --> 00:14:41.520
But if you only want to spin

499
00:14:41.520 --> 00:14:43.160
up one instance, then this is fine.

500
00:14:43.160 --> 00:14:44.360
Okay, nice.

501
00:14:44.360 --> 00:14:46.120
What was our second approach

502
00:14:46.120 --> 00:14:48.760
that I want to scale it, right?

503
00:14:48.760 --> 00:14:51.120
I want to have four instances

504
00:14:51.120 --> 00:14:52.640
of my server running, but I want

505
00:14:52.640 --> 00:14:54.360
to have only one diary.

506
00:14:54.360 --> 00:14:56.360
So in this particular scenario, what

507
00:14:56.360 --> 00:14:58.520
we could do is this diary can be

508
00:14:58.520 --> 00:15:00.600
moved to a database, yes or no?

509
00:15:01.320 --> 00:15:02.760
So technically what we are trying

510
00:15:02.760 --> 00:15:04.520
to do is, you know, drizzle, right?

511
00:15:04.520 --> 00:15:06.000
So let's say this is your database

512
00:15:06.000 --> 00:15:08.200
running, so everyone can basically

513
00:15:08.200 --> 00:15:10.320
connect to it, keep the tokens

514
00:15:10.320 --> 00:15:11.800
here, retrieve from here.

515
00:15:11.800 --> 00:15:13.770
But the problem is that with this

516
00:15:13.770 --> 00:15:15.050
approach, what will happen?

517
00:15:15.050 --> 00:15:17.130
You are actually making a lot of load

518
00:15:17.130 --> 00:15:19.050
on the database because four servers

519
00:15:19.050 --> 00:15:21.050
are continuously reading the data

520
00:15:21.050 --> 00:15:23.050
and writing the data to, diary.

521
00:15:23.050 --> 00:15:25.530
And while, while one is writing

522
00:15:25.530 --> 00:15:27.050
to something to the diary, okay,

523
00:15:27.050 --> 00:15:29.290
he's creating a token, others have

524
00:15:29.290 --> 00:15:32.410
to wait, Others have to wait.

525
00:15:32.410 --> 00:15:33.290
That is a problem.

526
00:15:34.250 --> 00:15:36.290
But to solve this problem, if you

527
00:15:36.290 --> 00:15:37.930
give four diaries to four security

528
00:15:37.930 --> 00:15:39.210
guards, again, that's a problem.

529
00:15:39.210 --> 00:15:40.210
You know what's a problem?

530
00:15:40.210 --> 00:15:41.210
Because if the diary is

531
00:15:41.210 --> 00:15:42.610
with this person, he has

532
00:15:42.610 --> 00:15:44.210
to go to this person only.

533
00:15:44.210 --> 00:15:45.410
He has to go to this

534
00:15:45.410 --> 00:15:46.770
particular server only.

535
00:15:46.770 --> 00:15:48.570
His request cannot be routed

536
00:15:48.570 --> 00:15:50.690
to some other server instance.

537
00:15:50.690 --> 00:15:52.570
So this is basically the problems

538
00:15:52.570 --> 00:15:54.130
with this particular approach.

539
00:15:55.010 --> 00:15:57.850
Okay, just for your knowledge, this

540
00:15:57.850 --> 00:15:59.570
particular thing is also known as

541
00:15:59.570 --> 00:16:01.890
session based authentication.

542
00:16:01.890 --> 00:16:04.050
It's known as a session

543
00:16:04.050 --> 00:16:05.810
based authentication.

544
00:16:06.370 --> 00:16:06.690
Why?

545
00:16:06.690 --> 00:16:07.770
This is known as a Session

546
00:16:07.770 --> 00:16:09.010
based authentication.

547
00:16:09.010 --> 00:16:10.410
Because what you are basically doing

548
00:16:10.410 --> 00:16:12.330
is now you're creating a session

549
00:16:12.330 --> 00:16:14.330
for a user, you are maintaining a

550
00:16:14.330 --> 00:16:16.490
diary for the user and you are

551
00:16:16.490 --> 00:16:18.330
giving him a temporary token which

552
00:16:18.330 --> 00:16:20.610
is stored in your database, sorry,

553
00:16:20.610 --> 00:16:22.410
not database, in your memory, I can

554
00:16:22.410 --> 00:16:23.810
say right in your ram, in your

555
00:16:23.810 --> 00:16:24.690
variable.

556
00:16:24.690 --> 00:16:26.370
So while the server is running,

557
00:16:26.370 --> 00:16:27.530
basically you have the access

558
00:16:27.530 --> 00:16:29.010
to the token that, okay, if

559
00:16:29.010 --> 00:16:30.530
the token is in the diary, you

560
00:16:30.530 --> 00:16:32.370
mark him as authenticated.

561
00:16:32.370 --> 00:16:34.090
So in session based authentication,

562
00:16:34.090 --> 00:16:36.210
what happens is basically

563
00:16:36.210 --> 00:16:37.970
the server becomes.

564
00:16:38.940 --> 00:16:41.820
The server is stateful.

565
00:16:42.540 --> 00:16:45.100
The server is stateful, server

566
00:16:45.100 --> 00:16:48.060
is maintaining a diary for you

567
00:16:48.060 --> 00:16:49.580
where it is keeping a record

568
00:16:49.580 --> 00:16:52.380
of that, which token, which token

569
00:16:52.380 --> 00:16:54.460
is issued to which person.

570
00:16:54.460 --> 00:16:55.260
Yes or no?

571
00:16:56.380 --> 00:16:57.180
Yes or no.

572
00:16:57.820 --> 00:16:59.620
This is very nice because you

573
00:16:59.620 --> 00:17:00.940
know what is the advantage here?

574
00:17:00.940 --> 00:17:04.380
I have the control, anytime I want

575
00:17:04.380 --> 00:17:06.810
to log out this user, I have to just

576
00:17:06.810 --> 00:17:08.530
delete the token in my database.

577
00:17:08.530 --> 00:17:10.730
So let's say if I figure out that

578
00:17:10.730 --> 00:17:12.970
hey, this particular user seems a

579
00:17:12.970 --> 00:17:14.410
hacker, so what I have to do is I

580
00:17:14.410 --> 00:17:16.329
have to clear my diary and all the

581
00:17:16.329 --> 00:17:18.329
users or that particular user with

582
00:17:18.329 --> 00:17:19.930
that token is automatically logged

583
00:17:19.930 --> 00:17:21.690
out because when he will again make

584
00:17:21.690 --> 00:17:23.369
the request because the token is

585
00:17:23.369 --> 00:17:24.810
not there, he will be considered as

586
00:17:24.810 --> 00:17:25.730
logout.

587
00:17:25.730 --> 00:17:27.089
Session based authentication.

588
00:17:27.089 --> 00:17:29.890
The problem is it's stateful, right?

589
00:17:29.890 --> 00:17:31.370
The scalability is a problem.

590
00:17:31.370 --> 00:17:33.210
It's not at all scalable.

591
00:17:33.210 --> 00:17:35.010
If you have noticed, this is really

592
00:17:35.010 --> 00:17:37.930
nice for short lived sessions.

593
00:17:39.210 --> 00:17:40.410
Can you give me an example?

594
00:17:40.410 --> 00:17:43.090
If you understand banking, whenever

595
00:17:43.090 --> 00:17:44.570
you log into your banking website,

596
00:17:44.570 --> 00:17:46.530
you are all, you are only logged

597
00:17:46.530 --> 00:17:48.330
in for a couple of minutes.

598
00:17:48.330 --> 00:17:49.930
They only allow you to log

599
00:17:49.930 --> 00:17:50.970
in for five minutes.

600
00:17:50.970 --> 00:17:51.810
After five minutes

601
00:17:51.810 --> 00:17:52.890
you are logged out.

602
00:17:52.890 --> 00:17:54.970
Because they use sessions, they

603
00:17:54.970 --> 00:17:56.650
use stateful sessions,

604
00:17:56.650 --> 00:17:59.290
they create a token on their server,

605
00:17:59.290 --> 00:18:00.570
they give you the token.

606
00:18:00.570 --> 00:18:02.410
But what is in that token?

607
00:18:02.410 --> 00:18:04.050
The data about that token

608
00:18:04.050 --> 00:18:05.770
is stored on the database.

609
00:18:05.770 --> 00:18:08.010
See, technically if you see here,

610
00:18:08.010 --> 00:18:10.170
this number makes no sense.

611
00:18:10.170 --> 00:18:11.690
This number which is my

612
00:18:11.690 --> 00:18:13.770
token makes no sense at all.

613
00:18:13.770 --> 00:18:15.610
Because the data associated with

614
00:18:15.610 --> 00:18:17.930
this number that, hey, the username

615
00:18:17.930 --> 00:18:19.850
is piyush, it is, you know,

616
00:18:19.850 --> 00:18:21.010
email, is this password?

617
00:18:21.010 --> 00:18:23.410
Is this, that data is actually stored

618
00:18:23.410 --> 00:18:24.890
on the data, on the server.

619
00:18:25.620 --> 00:18:27.380
So in this scenario you give

620
00:18:27.380 --> 00:18:29.060
the token to the person.

621
00:18:29.060 --> 00:18:31.220
Okay, but actual relevance of

622
00:18:31.220 --> 00:18:33.700
the token is stored on the server.

623
00:18:33.700 --> 00:18:35.300
That is the main thing.

624
00:18:35.300 --> 00:18:36.900
That is why it is known as

625
00:18:36.900 --> 00:18:38.660
stateful because the state is

626
00:18:38.660 --> 00:18:40.420
maintained by the server and it's

627
00:18:40.420 --> 00:18:41.940
a session based authentication.

628
00:18:41.940 --> 00:18:43.260
It is really nice for short

629
00:18:43.260 --> 00:18:44.540
lived sessions, but not

630
00:18:44.540 --> 00:18:46.420
for the long lived sessions.

631
00:18:46.420 --> 00:18:47.140
So what is used

632
00:18:47.140 --> 00:18:48.380
in the long lived sessions?

633
00:18:48.380 --> 00:18:49.780
There is something known as

634
00:18:49.780 --> 00:18:51.880
JSON web tokens Right.

635
00:18:51.880 --> 00:18:53.800
Or I can also say

636
00:18:53.800 --> 00:18:56.120
stateless authentication.

637
00:18:56.120 --> 00:18:58.280
Okay, Stateless authentication.

638
00:18:58.280 --> 00:18:59.080
So this is something we

639
00:18:59.080 --> 00:18:59.720
are going to cover

640
00:18:59.720 --> 00:19:01.560
in the upcoming videos as well.

641
00:19:01.560 --> 00:19:02.840
So let me just do one thing.

642
00:19:02.840 --> 00:19:05.880
In the next video, let's end to end.

643
00:19:05.880 --> 00:19:06.360
Okay?

644
00:19:06.360 --> 00:19:08.360
I'm using the word end to end.

645
00:19:08.360 --> 00:19:09.520
Let's end to end.

646
00:19:09.520 --> 00:19:10.120
Okay.

647
00:19:10.120 --> 00:19:15.160
As I say end to end, code a session

648
00:19:15.160 --> 00:19:19.610
based stateful auth system.

649
00:19:20.170 --> 00:19:20.730
Okay?

650
00:19:20.730 --> 00:19:21.930
So in the next video we are going

651
00:19:21.930 --> 00:19:23.170
to first code this and then

652
00:19:23.170 --> 00:19:24.330
we are going to jump to the JSON

653
00:19:24.330 --> 00:19:25.450
web tokens which is basically

654
00:19:25.450 --> 00:19:27.290
a stateless authentication.

655
00:19:27.290 --> 00:19:28.850
So I meet, I'll meet you

656
00:19:28.850 --> 00:19:30.010
in the next particular video.
