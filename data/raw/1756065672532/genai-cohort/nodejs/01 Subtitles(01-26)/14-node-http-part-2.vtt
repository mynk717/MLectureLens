WEBVTT

1
00:00:00.160 --> 00:00:01.680
Okay, so now with this good

2
00:00:01.680 --> 00:00:03.600
amount of knowledge, let's jump

3
00:00:03.600 --> 00:00:04.760
onto some coding part.

4
00:00:04.760 --> 00:00:05.600
Right?

5
00:00:05.600 --> 00:00:07.040
So I have a new project,

6
00:00:07.040 --> 00:00:08.760
so I like to set up things from

7
00:00:08.760 --> 00:00:09.760
scratch so that you know.

8
00:00:09.760 --> 00:00:11.000
So first things first, I'll just

9
00:00:11.000 --> 00:00:13.760
do an npm Init hyphen y

10
00:00:13.760 --> 00:00:15.800
so that I have a package JSON file.

11
00:00:15.800 --> 00:00:16.920
So you can see a very simple

12
00:00:16.920 --> 00:00:18.000
package or JSON file.

13
00:00:18.000 --> 00:00:18.960
And at this point you know

14
00:00:18.960 --> 00:00:20.480
what is a package JSON file.

15
00:00:20.480 --> 00:00:22.760
Then I'm, I like to do npm install

16
00:00:22.760 --> 00:00:24.480
at the array types/ node

17
00:00:24.480 --> 00:00:25.920
so that my VS code is working

18
00:00:25.920 --> 00:00:27.040
absolutely like a charm.

19
00:00:27.780 --> 00:00:28.580
And then let's create

20
00:00:28.580 --> 00:00:30.220
an index js file.

21
00:00:30.220 --> 00:00:31.100
So usually you will

22
00:00:31.100 --> 00:00:32.220
have a lot of files.

23
00:00:32.220 --> 00:00:32.860
Okay?

24
00:00:32.860 --> 00:00:34.300
So you will have index js file.

25
00:00:34.300 --> 00:00:35.300
You will have a lot of files.

26
00:00:35.300 --> 00:00:37.100
But index js file is the one

27
00:00:37.100 --> 00:00:38.340
that we need to execute.

28
00:00:38.340 --> 00:00:39.700
And this is where we are going

29
00:00:39.700 --> 00:00:40.940
to import all our code.

30
00:00:41.500 --> 00:00:42.980
So first things first, let's

31
00:00:42.980 --> 00:00:44.860
have the HTTP setup right here.

32
00:00:44.860 --> 00:00:46.140
That is required.

33
00:00:46.140 --> 00:00:47.740
And let's import the.

34
00:00:47.740 --> 00:00:50.220
No, not like this node HTTP, Right.

35
00:00:50.220 --> 00:00:52.380
That looks more, good.

36
00:00:52.380 --> 00:00:54.300
Then you can create a server.

37
00:00:54.300 --> 00:00:55.860
Okay, you can create a server that

38
00:00:55.860 --> 00:00:59.450
is HTTP.create server and you have

39
00:00:59.450 --> 00:01:00.690
to pass a callback function

40
00:01:00.690 --> 00:01:02.330
which has request and response.

41
00:01:02.330 --> 00:01:03.050
Right?

42
00:01:03.050 --> 00:01:04.986
Then finally you can just say server.

43
00:01:04.986 --> 00:01:06.250
Listen on some port.

44
00:01:06.810 --> 00:01:08.610
I, mean usually we use 8000

45
00:01:08.610 --> 00:01:09.690
for the development.

46
00:01:09.690 --> 00:01:11.610
And then you can pass a callback

47
00:01:11.610 --> 00:01:13.850
function which says console log,

48
00:01:13.850 --> 00:01:17.530
that server is running on port.

49
00:01:17.530 --> 00:01:18.610
Which port are we running?

50
00:01:18.610 --> 00:01:19.450
We are running on port

51
00:01:19.450 --> 00:01:21.210
number 8,000, right?

52
00:01:21.210 --> 00:01:24.110
So port 8,000 seems good.

53
00:01:24.830 --> 00:01:27.710
Now see guys, if I have to run this

54
00:01:27.710 --> 00:01:29.590
particular code, I have to say node

55
00:01:29.590 --> 00:01:32.350
and I have to say index js, right?

56
00:01:32.350 --> 00:01:34.350
But you know what you can do is

57
00:01:34.350 --> 00:01:35.910
instead of saying it like this, you

58
00:01:35.910 --> 00:01:38.350
can configure your custom script.

59
00:01:38.350 --> 00:01:39.990
How just remove this

60
00:01:39.990 --> 00:01:40.910
particular script.

61
00:01:40.910 --> 00:01:41.750
You can just say, hey,

62
00:01:41.750 --> 00:01:42.550
I want a script.

63
00:01:42.550 --> 00:01:43.230
Let's say start.

64
00:01:43.230 --> 00:01:44.590
This can be anything.

65
00:01:44.590 --> 00:01:46.750
And whenever someone says start,

66
00:01:46.750 --> 00:01:48.830
I have to run this as the command.

67
00:01:49.440 --> 00:01:50.880
Now what you can do is using

68
00:01:50.880 --> 00:01:53.360
npm, I repeat, using npm,

69
00:01:53.360 --> 00:01:54.240
you can just say start.

70
00:01:54.240 --> 00:01:55.760
Okay, npm start.

71
00:01:55.760 --> 00:01:57.240
And what this will do is this

72
00:01:57.240 --> 00:01:58.600
will basically run whatsoever

73
00:01:58.600 --> 00:01:59.760
you have specified here.

74
00:01:59.760 --> 00:02:01.920
For example, let's say for

75
00:02:01.920 --> 00:02:05.200
I just say echo, hey man.

76
00:02:05.200 --> 00:02:06.960
Okay, just, just anything.

77
00:02:06.960 --> 00:02:08.639
Now if I do npm start, you can

78
00:02:08.639 --> 00:02:10.000
see it is just saying hey man.

79
00:02:10.000 --> 00:02:12.040
So npm start basically reads

80
00:02:12.040 --> 00:02:14.200
the start script from here and runs

81
00:02:14.200 --> 00:02:16.000
whatever is as the value.

82
00:02:16.000 --> 00:02:16.400
Okay?

83
00:02:16.400 --> 00:02:17.560
So usually you will have

84
00:02:17.560 --> 00:02:18.840
a lot of things here.

85
00:02:18.840 --> 00:02:20.200
For example, you can have start, you

86
00:02:20.200 --> 00:02:21.800
can have build, and then you can

87
00:02:21.800 --> 00:02:23.400
have the build command, you can have

88
00:02:23.400 --> 00:02:25.360
xyz which does something, something.

89
00:02:25.360 --> 00:02:26.360
So you can even create

90
00:02:26.360 --> 00:02:27.920
your own and scripts.

91
00:02:27.920 --> 00:02:28.640
So usually you will

92
00:02:28.640 --> 00:02:29.600
have a start script.

93
00:02:29.600 --> 00:02:31.200
So npm start, which

94
00:02:31.200 --> 00:02:32.320
will start the server.

95
00:02:32.320 --> 00:02:32.880
Okay.

96
00:02:33.440 --> 00:02:35.160
Now in the server, what I want

97
00:02:35.160 --> 00:02:36.400
to really do is I don't

98
00:02:36.400 --> 00:02:37.600
want to do nothing much.

99
00:02:37.600 --> 00:02:38.560
First of all, I'll just do

100
00:02:38.560 --> 00:02:40.280
a console dot log that I

101
00:02:40.280 --> 00:02:41.600
got an incoming request.

102
00:02:41.600 --> 00:02:42.160
Okay?

103
00:02:42.160 --> 00:02:45.280
So there is an incoming request at.

104
00:02:45.280 --> 00:02:46.400
So let's have the time.

105
00:02:46.400 --> 00:02:47.960
Okay, so I want to console

106
00:02:47.960 --> 00:02:49.120
log the timestamp.

107
00:02:49.120 --> 00:02:51.160
So just have you know, date

108
00:02:51.160 --> 00:02:52.280
dot now that will give

109
00:02:52.280 --> 00:02:53.360
you the current timestamp.

110
00:02:53.360 --> 00:02:54.440
So there is a new request

111
00:02:54.440 --> 00:02:55.600
coming at this time.

112
00:02:55.600 --> 00:02:56.880
Then what we will do is

113
00:02:57.520 --> 00:02:59.480
let me just do a console.log of

114
00:02:59.480 --> 00:03:01.760
full request.C headers.

115
00:03:01.760 --> 00:03:03.880
Okay, so this is how you

116
00:03:03.880 --> 00:03:05.080
can access the headers.

117
00:03:05.080 --> 00:03:07.390
Okay, so you remember headers, right?

118
00:03:07.390 --> 00:03:07.870
Headers.

119
00:03:07.870 --> 00:03:09.670
So if I want to access this

120
00:03:09.670 --> 00:03:11.670
authorization header only I can just

121
00:03:11.670 --> 00:03:14.030
say request headers.sorry.

122
00:03:14.030 --> 00:03:14.910
authorization.

123
00:03:14.910 --> 00:03:16.470
So this will give me the value

124
00:03:16.470 --> 00:03:18.430
for just the authorization headers.

125
00:03:18.430 --> 00:03:20.190
But let's just console log

126
00:03:20.190 --> 00:03:21.270
the whole object, okay,

127
00:03:21.270 --> 00:03:22.670
that these are the headers.

128
00:03:22.670 --> 00:03:24.110
And don't forget to

129
00:03:24.110 --> 00:03:25.070
send the response.

130
00:03:25.070 --> 00:03:26.470
So to send the response.

131
00:03:26.470 --> 00:03:27.750
Okay, so this, this is nothing.

132
00:03:27.750 --> 00:03:28.990
This is just a comment.

133
00:03:28.990 --> 00:03:30.430
You can just say request

134
00:03:30.430 --> 00:03:32.110
dot write head.

135
00:03:32.110 --> 00:03:33.190
Sorry, not request

136
00:03:33.190 --> 00:03:34.510
response write head.

137
00:03:35.100 --> 00:03:36.700
So right head.

138
00:03:36.700 --> 00:03:38.020
Where is the right head thing?

139
00:03:38.020 --> 00:03:39.260
Yeah, here is the right head

140
00:03:39.260 --> 00:03:40.140
status code.

141
00:03:40.140 --> 00:03:41.060
So I'll just send you

142
00:03:41.060 --> 00:03:42.540
a 200 status code.

143
00:03:42.540 --> 00:03:43.020
Okay.

144
00:03:43.020 --> 00:03:44.420
And then finally you can just

145
00:03:44.420 --> 00:03:47.020
do a response.end saying.

146
00:03:47.020 --> 00:03:48.860
I mean you can just say okay.

147
00:03:48.860 --> 00:03:49.380
Okay.

148
00:03:49.380 --> 00:03:50.260
I'll just say okay.

149
00:03:50.260 --> 00:03:51.040
Okay.

150
00:03:51.040 --> 00:03:51.780
Yeah, that's it.

151
00:03:51.780 --> 00:03:53.500
So this is my beautiful server

152
00:03:53.500 --> 00:03:54.460
that is up and running.

153
00:03:54.460 --> 00:03:56.220
Now let's do an npm Start.

154
00:03:56.220 --> 00:03:57.220
So you can see that server

155
00:03:57.220 --> 00:03:58.780
is running on Port 8000

156
00:03:58.780 --> 00:04:00.700
and everything is seems cool.

157
00:04:00.700 --> 00:04:01.740
So let me just open a window

158
00:04:01.740 --> 00:04:03.180
and go on to localhost8000.

159
00:04:03.180 --> 00:04:04.540
So this is what we are getting right

160
00:04:05.100 --> 00:04:07.420
now when we go back we have a lot

161
00:04:07.420 --> 00:04:09.020
of console log things, right?

162
00:04:09.020 --> 00:04:10.140
So let's see that.

163
00:04:10.140 --> 00:04:12.460
Then I hit this server when I said

164
00:04:12.460 --> 00:04:15.020
localhost8000 on my browser.

165
00:04:15.020 --> 00:04:17.700
Browser made a request to my server.

166
00:04:17.700 --> 00:04:18.339
Yes or no?

167
00:04:18.339 --> 00:04:19.579
So let me just do it again.

168
00:04:19.579 --> 00:04:21.420
So I'll just do a command K

169
00:04:21.420 --> 00:04:23.180
to clear everything from here

170
00:04:23.180 --> 00:04:25.180
and network and refresh.

171
00:04:25.180 --> 00:04:25.940
Can you see that?

172
00:04:25.940 --> 00:04:28.290
We made a request to localhost8000

173
00:04:28.290 --> 00:04:29.290
that is a get request.

174
00:04:29.290 --> 00:04:30.850
So by default browser will

175
00:04:30.850 --> 00:04:32.290
always make a get request.

176
00:04:32.290 --> 00:04:33.330
You got a 2000.

177
00:04:33.330 --> 00:04:33.970
Okay.

178
00:04:33.970 --> 00:04:35.730
And these were the headers that

179
00:04:35.730 --> 00:04:38.130
your browser Sent, right?

180
00:04:38.130 --> 00:04:40.850
So it sent an accept encoding, accept

181
00:04:40.850 --> 00:04:42.530
language cache, control connection,

182
00:04:42.530 --> 00:04:44.050
host, right and everything.

183
00:04:44.050 --> 00:04:45.370
So browser is sending a lot

184
00:04:45.370 --> 00:04:46.850
of information now.

185
00:04:46.850 --> 00:04:48.450
Can you see that all this

186
00:04:48.450 --> 00:04:49.730
information is available here?

187
00:04:49.730 --> 00:04:50.610
This is basically same

188
00:04:50.610 --> 00:04:52.720
thing, see Accept encoding,

189
00:04:52.720 --> 00:04:54.280
gzip, deflate branch.

190
00:04:54.280 --> 00:04:55.200
So you can see you will have

191
00:04:55.200 --> 00:04:57.160
an accept encoding here also.

192
00:04:57.160 --> 00:04:58.840
So where is accept encoding?

193
00:04:58.840 --> 00:05:00.120
Yeah, accept encoding.

194
00:05:00.120 --> 00:05:01.720
See the same value here.

195
00:05:01.720 --> 00:05:03.800
So all these values are basically

196
00:05:03.800 --> 00:05:05.920
same that the browser has sent you.

197
00:05:05.920 --> 00:05:06.440
Right?

198
00:05:06.440 --> 00:05:07.560
So you can access

199
00:05:07.560 --> 00:05:08.920
the headers like this.

200
00:05:08.920 --> 00:05:10.119
Okay, let's just do one thing.

201
00:05:10.119 --> 00:05:11.840
Let's just do it at 201 now.

202
00:05:11.840 --> 00:05:14.040
Now I want to send a response of 201

203
00:05:14.760 --> 00:05:15.040
now.

204
00:05:15.040 --> 00:05:16.240
Guys, don't you think that this is

205
00:05:16.240 --> 00:05:17.760
irritating to do a control C

206
00:05:17.760 --> 00:05:19.480
and restart the server every time?

207
00:05:19.480 --> 00:05:20.560
So what I'll do is I'll

208
00:05:20.560 --> 00:05:21.880
just add a Var command.

209
00:05:21.880 --> 00:05:23.320
Okay, Just add a Var command

210
00:05:23.320 --> 00:05:24.680
so that if I do npm

211
00:05:24.680 --> 00:05:26.120
Start it is automatically watching.

212
00:05:26.120 --> 00:05:27.720
So if I change anything, my server

213
00:05:27.720 --> 00:05:28.840
is automatically restarting.

214
00:05:28.840 --> 00:05:30.320
So now if I do this thing you

215
00:05:30.320 --> 00:05:32.120
can see automatically restarts.

216
00:05:32.120 --> 00:05:33.400
Now if I do a refresh here.

217
00:05:33.400 --> 00:05:34.920
Now I'm getting a 201.

218
00:05:34.920 --> 00:05:37.240
So now the server sent a 201,

219
00:05:37.240 --> 00:05:38.480
which doesn't make any sense.

220
00:05:38.480 --> 00:05:40.080
But yeah, you can see that this

221
00:05:40.080 --> 00:05:42.200
is how you can get the request.

222
00:05:42.200 --> 00:05:43.920
Now from here, from here what

223
00:05:43.920 --> 00:05:46.280
I can do is let's just try to see

224
00:05:46.280 --> 00:05:48.120
that what encoding or what

225
00:05:48.120 --> 00:05:49.480
language we are accepting.

226
00:05:49.480 --> 00:05:52.240
Okay, so I'll just copy this.

227
00:05:52.240 --> 00:05:54.440
Okay, I'll just copy and I'll

228
00:05:54.440 --> 00:05:57.000
say that response dot end I want

229
00:05:57.000 --> 00:05:58.880
to send a message that is hey,

230
00:05:59.520 --> 00:06:03.800
you can accept okay, and then

231
00:06:03.800 --> 00:06:06.520
I'll just say request.headers.

232
00:06:06.520 --> 00:06:07.710
accept language.

233
00:06:07.710 --> 00:06:09.440
Like this because it's a hyphen.

234
00:06:09.440 --> 00:06:11.120
So now let's see if I do a refresh.

235
00:06:11.120 --> 00:06:13.160
See the server is trying to read our

236
00:06:13.160 --> 00:06:14.880
headers and sending me back this.

237
00:06:14.880 --> 00:06:17.000
So server can read these headers as

238
00:06:17.000 --> 00:06:19.040
key value pair so we can process it

239
00:06:19.040 --> 00:06:20.920
that what the client really wants.

240
00:06:20.920 --> 00:06:22.320
And based on that what we

241
00:06:22.320 --> 00:06:24.120
can do, we can basically send

242
00:06:24.120 --> 00:06:26.200
an appropriate response.

243
00:06:26.200 --> 00:06:27.680
Okay, so this is how you

244
00:06:27.680 --> 00:06:29.000
can read the headers.

245
00:06:29.000 --> 00:06:31.000
Now you can even read the body.

246
00:06:31.000 --> 00:06:32.400
Okay so body can be anything.

247
00:06:32.400 --> 00:06:33.320
So you will have access

248
00:06:33.320 --> 00:06:35.000
to request, data.

249
00:06:35.000 --> 00:06:37.560
Okay so request body is there

250
00:06:37.560 --> 00:06:38.680
and there is something

251
00:06:38.680 --> 00:06:40.200
known as request method.

252
00:06:40.200 --> 00:06:42.360
Okay, request method is also here.

253
00:06:42.360 --> 00:06:43.600
So let's try to console

254
00:06:43.600 --> 00:06:45.210
log this request method.

255
00:06:45.210 --> 00:06:46.210
So if I do a refresh

256
00:06:46.210 --> 00:06:47.610
you are getting a git.

257
00:06:47.610 --> 00:06:49.890
Okay, so to make a post Request you

258
00:06:49.890 --> 00:06:51.370
need JavaScript on the front end.

259
00:06:51.370 --> 00:06:52.210
So let me show you how

260
00:06:52.210 --> 00:06:53.010
you can even do that.

261
00:06:53.010 --> 00:06:55.410
Okay, so in the JavaScript what

262
00:06:55.410 --> 00:06:57.250
we can do is here I'll just

263
00:06:57.250 --> 00:06:59.450
write a code that is fetch.

264
00:06:59.450 --> 00:07:00.530
Hey, can you please

265
00:07:00.530 --> 00:07:02.170
make a fetch call to.

266
00:07:02.170 --> 00:07:03.370
To my own server?

267
00:07:04.170 --> 00:07:05.450
With using this.

268
00:07:05.450 --> 00:07:06.690
Using the post method.

269
00:07:06.690 --> 00:07:07.010
Okay.

270
00:07:07.010 --> 00:07:08.570
And I'll not be sending any data.

271
00:07:08.570 --> 00:07:08.970
Enter.

272
00:07:10.170 --> 00:07:11.290
We caught an error.

273
00:07:11.290 --> 00:07:12.670
What's the error?

274
00:07:12.670 --> 00:07:13.150
Oh, sorry.

275
00:07:13.150 --> 00:07:13.990
This should be actually

276
00:07:13.990 --> 00:07:14.830
like this, right?

277
00:07:14.830 --> 00:07:15.550
Enter.

278
00:07:15.550 --> 00:07:16.630
So now you can see that we

279
00:07:16.630 --> 00:07:17.790
got a post request, right?

280
00:07:17.790 --> 00:07:18.630
The front end was able

281
00:07:18.630 --> 00:07:19.590
to send a post request.

282
00:07:19.590 --> 00:07:20.830
Similarly, front end can

283
00:07:20.830 --> 00:07:22.350
even send a patch request.

284
00:07:22.350 --> 00:07:24.190
So let's say patch, okay?

285
00:07:24.190 --> 00:07:24.750
And enter.

286
00:07:24.750 --> 00:07:25.790
So you can see that now we

287
00:07:25.790 --> 00:07:27.070
are getting a patch request.

288
00:07:27.070 --> 00:07:28.670
So this is a request method

289
00:07:28.670 --> 00:07:29.270
that you can access.

290
00:07:29.270 --> 00:07:29.870
Like this.

291
00:07:29.870 --> 00:07:30.790
Similar to this, you

292
00:07:30.790 --> 00:07:33.150
have a request dot URL.

293
00:07:33.150 --> 00:07:34.310
Okay, so let's see that.

294
00:07:34.310 --> 00:07:36.190
What is this request URL.

295
00:07:36.190 --> 00:07:38.110
So if I am on localhost 8000

296
00:07:38.110 --> 00:07:39.670
URL is coming to be slash.

297
00:07:39.670 --> 00:07:41.270
Okay, you can ignore this five icon.

298
00:07:41.270 --> 00:07:42.910
This is a this is something that

299
00:07:42.910 --> 00:07:43.830
browser internally makes

300
00:07:43.830 --> 00:07:46.050
a request request for this logo.

301
00:07:46.050 --> 00:07:47.050
Do you see this logo here?

302
00:07:47.050 --> 00:07:48.290
For this, let's go

303
00:07:48.290 --> 00:07:50.170
to slash contact us.

304
00:07:50.170 --> 00:07:51.730
Okay, so even if I go

305
00:07:51.730 --> 00:07:53.290
to contact us, right?

306
00:07:53.290 --> 00:07:54.450
You can see the request is

307
00:07:54.450 --> 00:07:55.850
coming to slash contact us.

308
00:07:56.410 --> 00:07:57.570
So that means when you are

309
00:07:57.570 --> 00:07:58.650
building a server,

310
00:07:58.650 --> 00:07:59.970
you can do something like this.

311
00:07:59.970 --> 00:08:01.530
You can have a switch case

312
00:08:01.530 --> 00:08:03.290
on request URL.

313
00:08:03.290 --> 00:08:03.650
Right?

314
00:08:03.650 --> 00:08:05.210
Request URL.

315
00:08:05.210 --> 00:08:06.970
And you also want to have a switch

316
00:08:06.970 --> 00:08:08.770
case on like the methods, right?

317
00:08:08.770 --> 00:08:10.090
If it's a get method or that.

318
00:08:10.090 --> 00:08:12.450
But yeah, on that later

319
00:08:12.450 --> 00:08:14.210
case, if it is a root.

320
00:08:14.210 --> 00:08:16.010
Okay, in this case what we

321
00:08:16.010 --> 00:08:17.570
will do is let's always

322
00:08:17.570 --> 00:08:19.170
write ahead of 200 only.

323
00:08:19.170 --> 00:08:20.730
Okay, let's always write

324
00:08:20.730 --> 00:08:22.290
ahead of 200 only.

325
00:08:22.290 --> 00:08:23.690
So what I'll do is I'll just do

326
00:08:23.690 --> 00:08:25.610
a response dot end so I'll just

327
00:08:25.610 --> 00:08:27.570
say return response N

328
00:08:28.130 --> 00:08:29.890
saying that you are on the homepage.

329
00:08:29.890 --> 00:08:31.570
So this is your home page.

330
00:08:32.130 --> 00:08:33.650
And let's do a break

331
00:08:34.210 --> 00:08:35.610
then if the case.

332
00:08:35.610 --> 00:08:36.690
Okay, if the case is

333
00:08:36.690 --> 00:08:39.570
slash contact us.

334
00:08:39.570 --> 00:08:41.970
Okay, in this particular scenario,

335
00:08:41.970 --> 00:08:43.330
what I can do is the break

336
00:08:43.330 --> 00:08:44.330
is not required because you

337
00:08:44.330 --> 00:08:45.570
know, I'm just doing a return.

338
00:08:45.570 --> 00:08:47.250
So I can just do a return

339
00:08:47.250 --> 00:08:49.730
that hey, contact me

340
00:08:49.730 --> 00:08:54.530
at pius girl.dev@gmail.com.

341
00:08:54.530 --> 00:08:55.330
nice.

342
00:08:55.330 --> 00:08:56.770
Similar to this, Similar to this, you

343
00:08:56.770 --> 00:08:58.850
can have a case of let's say about.

344
00:08:58.850 --> 00:09:00.010
Okay, we will create one

345
00:09:00.010 --> 00:09:01.890
more page that is about.

346
00:09:01.890 --> 00:09:03.650
So in case of about, let's just

347
00:09:03.650 --> 00:09:06.980
return response dot end saying

348
00:09:06.980 --> 00:09:10.180
I am a software engineer.

349
00:09:10.180 --> 00:09:11.940
Okay, I'm a software engineer.

350
00:09:11.940 --> 00:09:13.460
Then let's have a default

351
00:09:13.460 --> 00:09:14.660
case Default case should be

352
00:09:14.660 --> 00:09:15.540
a four or four, right?

353
00:09:16.100 --> 00:09:17.700
If you're on the default case

354
00:09:17.700 --> 00:09:19.140
in this particular scenario,

355
00:09:19.140 --> 00:09:20.499
it should be a 4 or 4.

356
00:09:20.499 --> 00:09:22.580
So let's say, hey 404.

357
00:09:22.580 --> 00:09:24.740
And finally response dot end

358
00:09:25.810 --> 00:09:28.260
end saying that you.

359
00:09:29.380 --> 00:09:31.580
Sorry, you are lost.

360
00:09:31.580 --> 00:09:32.700
You are lost.

361
00:09:32.700 --> 00:09:33.860
Okay, so let's just

362
00:09:33.860 --> 00:09:35.420
say that you are lost.

363
00:09:35.980 --> 00:09:37.900
Nice and cool.

364
00:09:37.900 --> 00:09:39.580
So now let's test a server.

365
00:09:39.580 --> 00:09:40.860
So if I do a refresh,

366
00:09:40.860 --> 00:09:43.740
contact me@us.devgmail.com.

367
00:09:43.740 --> 00:09:44.780
okay, that's fine.

368
00:09:44.780 --> 00:09:45.900
You can ignore this.

369
00:09:45.900 --> 00:09:47.740
If I go on to the slash,

370
00:09:48.380 --> 00:09:49.460
the server crashed.

371
00:09:49.460 --> 00:09:50.540
The server crashed.

372
00:09:51.100 --> 00:09:54.020
Okay, so why did the server crashed?

373
00:09:54.020 --> 00:09:55.580
The reason for that is,

374
00:09:56.230 --> 00:09:56.950
you know, we are trying

375
00:09:56.950 --> 00:09:58.630
to mutate the headers twice.

376
00:09:58.630 --> 00:10:00.230
So what you can do is you can also

377
00:10:00.230 --> 00:10:02.910
shift this logic into your FLS only.

378
00:10:02.910 --> 00:10:04.350
Okay, so yeah, this will

379
00:10:04.350 --> 00:10:05.350
basically solve the issue.

380
00:10:05.910 --> 00:10:07.630
So now let's do a refresh.

381
00:10:07.630 --> 00:10:08.870
Okay, homepage.

382
00:10:08.870 --> 00:10:09.590
Nice.

383
00:10:09.590 --> 00:10:11.590
Let's go on to the slash contact us.

384
00:10:11.590 --> 00:10:12.550
Working good.

385
00:10:12.550 --> 00:10:14.230
Let's go on to the slash about.

386
00:10:15.110 --> 00:10:16.310
What was the page about?

387
00:10:16.310 --> 00:10:17.510
Yeah, just the about.

388
00:10:17.510 --> 00:10:18.550
So you can see that

389
00:10:19.110 --> 00:10:20.590
not, not like this slash about.

390
00:10:20.590 --> 00:10:22.710
I mean slash, about.

391
00:10:22.710 --> 00:10:24.230
You can see I'm a software engineer.

392
00:10:24.230 --> 00:10:24.570
But.

393
00:10:24.570 --> 00:10:25.530
But if I go on to some

394
00:10:25.530 --> 00:10:27.090
other page, xyz, which does

395
00:10:27.090 --> 00:10:28.570
not exist, you are lost.

396
00:10:28.570 --> 00:10:30.890
And even if I go to the network tab,

397
00:10:30.890 --> 00:10:32.570
so what you will notice is

398
00:10:33.370 --> 00:10:34.970
let me just zoom out a little bit.

399
00:10:34.970 --> 00:10:36.730
So we are getting a 404

400
00:10:36.730 --> 00:10:38.370
from where this 404 is coming.

401
00:10:38.370 --> 00:10:39.450
It is coming from.

402
00:10:39.450 --> 00:10:40.730
It is coming from here.

403
00:10:40.730 --> 00:10:42.330
What if I do a 200 here?

404
00:10:42.330 --> 00:10:43.210
Let's see.

405
00:10:43.210 --> 00:10:44.210
So even if you are lost,

406
00:10:44.210 --> 00:10:45.090
you are getting a 200.

407
00:10:45.090 --> 00:10:45.930
So this is not a good

408
00:10:45.930 --> 00:10:46.650
practice, right?

409
00:10:46.650 --> 00:10:48.050
You, you, you are not designing

410
00:10:48.050 --> 00:10:50.170
your server in a as per the rules.

411
00:10:50.170 --> 00:10:51.190
So you should not do it.

412
00:10:51.190 --> 00:10:51.910
I mean you can do it.

413
00:10:51.910 --> 00:10:52.550
It's your server.

414
00:10:52.550 --> 00:10:52.870
You are.

415
00:10:52.870 --> 00:10:53.870
You can do it anything.

416
00:10:53.870 --> 00:10:55.230
But these are not the standards,

417
00:10:55.230 --> 00:10:56.270
these are not the norms.

418
00:10:56.270 --> 00:10:57.030
So you should follow

419
00:10:57.030 --> 00:10:58.230
the guidelines and norms.

420
00:10:58.230 --> 00:10:59.910
Okay, so this is how you

421
00:10:59.910 --> 00:11:01.630
actually create a server.

422
00:11:01.630 --> 00:11:03.190
So basically you can have

423
00:11:03.190 --> 00:11:05.430
the URL based on the URL what

424
00:11:05.430 --> 00:11:06.990
the user is trying to access.

425
00:11:06.990 --> 00:11:08.110
You can do that.

426
00:11:08.110 --> 00:11:10.430
Okay, so yeah, congratulations

427
00:11:10.430 --> 00:11:11.950
on your very first server.

428
00:11:11.950 --> 00:11:13.030
So now you have a fully

429
00:11:13.030 --> 00:11:14.990
functional server which is

430
00:11:14.990 --> 00:11:17.220
more smart now do you?

431
00:11:17.220 --> 00:11:18.980
Did you notice one thing guys?

432
00:11:18.980 --> 00:11:21.100
That we are making a server

433
00:11:21.100 --> 00:11:21.940
application logic

434
00:11:21.940 --> 00:11:23.380
more and more smarter.

435
00:11:23.380 --> 00:11:25.380
Earlier our server was just able

436
00:11:25.380 --> 00:11:26.980
to return a single thing.

437
00:11:26.980 --> 00:11:28.860
Now we have a smart logic of

438
00:11:28.860 --> 00:11:30.900
a switch case which is reading that

439
00:11:30.900 --> 00:11:32.019
what you are trying to access.

440
00:11:32.019 --> 00:11:33.300
And based on that only

441
00:11:33.300 --> 00:11:34.660
we are returning it.

442
00:11:34.660 --> 00:11:36.540
So our goal is to make our

443
00:11:36.540 --> 00:11:38.420
servers application logic

444
00:11:38.420 --> 00:11:39.780
more and more smarter as

445
00:11:39.780 --> 00:11:41.060
we proceed in this course.

446
00:11:41.950 --> 00:11:42.830
Got it.

447
00:11:42.830 --> 00:11:44.670
So, yeah, I mean guys, you are

448
00:11:44.670 --> 00:11:46.350
really doing a great work.

449
00:11:46.350 --> 00:11:47.390
So that's all for this

450
00:11:47.390 --> 00:11:48.870
particular video and let's

451
00:11:48.870 --> 00:11:49.830
meet you in the next one.

452
00:11:49.830 --> 00:11:51.790
Until then, bye bye and take care.
