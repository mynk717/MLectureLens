WEBVTT

1
00:00:01.120 --> 00:00:02.920
All right, so before we move any

2
00:00:02.920 --> 00:00:04.720
further, I would like to discuss

3
00:00:04.720 --> 00:00:06.840
very briefly about how do we

4
00:00:06.840 --> 00:00:09.280
actually structure Python code.

5
00:00:09.280 --> 00:00:11.840
Or probably more better word would be

6
00:00:11.840 --> 00:00:14.640
organize, your Python code.

7
00:00:14.640 --> 00:00:17.120
Organize your.

8
00:00:17.120 --> 00:00:18.080
I can write that.

9
00:00:18.640 --> 00:00:21.280
Organize your Python code.

10
00:00:21.920 --> 00:00:23.400
So there are a lot of debates about

11
00:00:23.400 --> 00:00:26.320
how do we organize Python, code.

12
00:00:26.320 --> 00:00:28.000
And again, there are a lot of right

13
00:00:28.000 --> 00:00:29.920
and wrong and a lot of very

14
00:00:29.920 --> 00:00:31.960
opinionated people working on it.

15
00:00:31.960 --> 00:00:33.120
I'll show you my way

16
00:00:33.120 --> 00:00:34.880
of doing it and then you can just

17
00:00:34.880 --> 00:00:36.120
go ahead and follow along

18
00:00:36.120 --> 00:00:37.120
most of the part of it.

19
00:00:37.120 --> 00:00:37.840
But again, feel free

20
00:00:37.840 --> 00:00:38.760
to experiment with this.

21
00:00:38.760 --> 00:00:40.120
There is no such thing.

22
00:00:40.120 --> 00:00:41.360
Let's just say we want to have

23
00:00:41.360 --> 00:00:43.520
a code for running a chai shop.

24
00:00:43.520 --> 00:00:44.200
There are a lot of things

25
00:00:44.200 --> 00:00:45.320
that happens with it.

26
00:00:45.320 --> 00:00:47.560
So I call this my as first

27
00:00:47.560 --> 00:00:49.200
or the top level folder, just like

28
00:00:49.200 --> 00:00:51.070
we are creating here, things like

29
00:00:51.070 --> 00:00:52.440
01, virtual or all of this.

30
00:00:52.440 --> 00:00:53.920
So this is my first

31
00:00:53.920 --> 00:00:55.080
folder level structure.

32
00:00:55.600 --> 00:00:57.000
Now once I have this folder level

33
00:00:57.000 --> 00:00:58.920
structure inside this, I simply

34
00:00:58.920 --> 00:01:00.800
go ahead and say inside this I will

35
00:01:01.600 --> 00:01:03.280
always have a run script

36
00:01:03.280 --> 00:01:05.120
which runs my whole program.

37
00:01:05.120 --> 00:01:07.200
It could be run py, it could be

38
00:01:07.200 --> 00:01:09.680
main py, it could be index py.

39
00:01:09.680 --> 00:01:11.279
A lot of people have opinions,

40
00:01:11.279 --> 00:01:13.000
but this is majorly used

41
00:01:13.000 --> 00:01:14.760
to start my application.

42
00:01:14.760 --> 00:01:15.880
So I call this one as

43
00:01:15.880 --> 00:01:18.400
starter or starts the app.

44
00:01:18.400 --> 00:01:20.160
This is my first folder

45
00:01:20.160 --> 00:01:22.980
or the file that I have after this,

46
00:01:22.980 --> 00:01:26.100
what do I have is all the helpful

47
00:01:26.100 --> 00:01:27.820
files, whatever is required

48
00:01:27.820 --> 00:01:28.980
for the code part of it.

49
00:01:28.980 --> 00:01:30.740
So let's just say there's a chai py

50
00:01:31.960 --> 00:01:34.180
all the functional part of the code.

51
00:01:34.180 --> 00:01:35.980
Now not all the part can actually

52
00:01:35.980 --> 00:01:37.660
lie is just in this folder.

53
00:01:37.660 --> 00:01:39.300
We need some more organization

54
00:01:39.300 --> 00:01:41.100
like some of the part, maybe web

55
00:01:41.100 --> 00:01:43.260
servers, maybe some code for

56
00:01:43.260 --> 00:01:45.720
the client, maybe some process for

57
00:01:45.720 --> 00:01:47.060
processing machine learning.

58
00:01:47.060 --> 00:01:48.760
So again, lot of folders

59
00:01:48.760 --> 00:01:49.760
can actually be there.

60
00:01:49.760 --> 00:01:50.800
So for example, there is

61
00:01:50.800 --> 00:01:52.040
a folder of processing.

62
00:01:52.040 --> 00:01:54.480
Yeah, go ahead and have that inside

63
00:01:54.480 --> 00:01:55.880
this, have more files onto it.

64
00:01:55.880 --> 00:01:56.840
That's okay.

65
00:01:56.840 --> 00:01:58.280
Another thing which I usually

66
00:01:58.280 --> 00:02:00.000
recommend people that sometimes you

67
00:02:00.000 --> 00:02:02.560
want to have, naming vocabularies

68
00:02:02.560 --> 00:02:03.960
in the Python as well.

69
00:02:04.760 --> 00:02:08.199
So let's just call this one as utils.

70
00:02:08.199 --> 00:02:09.960
And you will find some folders

71
00:02:09.960 --> 00:02:10.800
like processing.

72
00:02:10.800 --> 00:02:11.760
This is also utils

73
00:02:11.760 --> 00:02:13.080
known as utilities.

74
00:02:13.080 --> 00:02:15.000
But in some of these folders like

75
00:02:15.000 --> 00:02:16.600
utils, what do we have is

76
00:02:16.600 --> 00:02:22.800
an underscore, underscore init py.

77
00:02:23.360 --> 00:02:25.280
What do we write inside this files?

78
00:02:25.280 --> 00:02:27.200
Actually nothing.

79
00:02:27.200 --> 00:02:28.800
This file is empty.

80
00:02:28.800 --> 00:02:30.400
It's just the name of the file

81
00:02:30.400 --> 00:02:31.560
which matters and which

82
00:02:31.560 --> 00:02:33.360
actually differentiates

83
00:02:33.360 --> 00:02:35.760
this processing with the utils.

84
00:02:35.760 --> 00:02:36.800
And I'll tell you what's

85
00:02:36.800 --> 00:02:38.440
the reason and what's the name

86
00:02:38.440 --> 00:02:39.360
of each one of them?

87
00:02:40.080 --> 00:02:42.560
So we do have first name known as

88
00:02:42.560 --> 00:02:44.320
module or modules.

89
00:02:44.320 --> 00:02:45.440
So I'll just call this one.

90
00:02:46.150 --> 00:02:47.910
So this modules every single

91
00:02:47.910 --> 00:02:49.910
file that you have, like this run

92
00:02:49.910 --> 00:02:53.510
py and this chai py

93
00:02:53.510 --> 00:02:55.550
all these files are known as modules

94
00:02:55.550 --> 00:02:56.950
and you will see them a lot.

95
00:02:57.510 --> 00:02:59.070
Another word that you're going to

96
00:02:59.070 --> 00:03:01.270
see a lot in the world of Python is

97
00:03:01.270 --> 00:03:05.190
known as package or packages,

98
00:03:05.190 --> 00:03:07.030
whatever you want to call them.

99
00:03:07.030 --> 00:03:11.350
Any folder which has this initial

100
00:03:11.900 --> 00:03:13.700
this is known as package.

101
00:03:13.700 --> 00:03:15.180
And yes, that's the difference.

102
00:03:15.180 --> 00:03:16.860
Any folder which has underscore

103
00:03:16.860 --> 00:03:19.740
underscore in it py

104
00:03:19.740 --> 00:03:22.220
empty file is called as package.

105
00:03:22.220 --> 00:03:23.860
But this processing since it doesn't

106
00:03:23.860 --> 00:03:25.380
have this file is not going to be

107
00:03:25.380 --> 00:03:27.820
called as packages and that's it.

108
00:03:27.820 --> 00:03:30.300
Now inside these files like chai py

109
00:03:30.300 --> 00:03:31.620
we have the classes, just like we

110
00:03:31.620 --> 00:03:33.580
saw at the very top of it here.

111
00:03:33.580 --> 00:03:35.020
Like we call this class, then we

112
00:03:35.020 --> 00:03:36.700
have some functions inside it, or

113
00:03:36.700 --> 00:03:38.140
maybe file just have the function,

114
00:03:38.140 --> 00:03:39.100
don't even have the class.

115
00:03:39.640 --> 00:03:41.800
These are the files and we call them

116
00:03:41.800 --> 00:03:43.880
just as classes or functions.

117
00:03:43.880 --> 00:03:45.520
So just always keep in mind this

118
00:03:45.520 --> 00:03:47.160
is organization, structure.

119
00:03:47.160 --> 00:03:48.160
Again it could have been

120
00:03:48.160 --> 00:03:49.440
different name like source

121
00:03:49.440 --> 00:03:51.200
controllers, whatnot, whatever

122
00:03:51.200 --> 00:03:51.960
you want to call them.

123
00:03:51.960 --> 00:03:53.160
That's not the problem.

124
00:03:53.160 --> 00:03:54.520
Just remember few things that

125
00:03:54.520 --> 00:03:55.920
hey, these are my modules.

126
00:03:55.920 --> 00:03:57.880
Like normal Python files.

127
00:03:57.880 --> 00:04:00.840
If a folder has initinit underscore

128
00:04:00.840 --> 00:04:02.440
that means it's a package, it's

129
00:04:02.440 --> 00:04:05.120
a Python vocabulary and then rest

130
00:04:05.120 --> 00:04:07.530
of the folders are just programs or

131
00:04:07.530 --> 00:04:09.250
files and folders just like that.

132
00:04:09.250 --> 00:04:10.290
We don't have a specific

133
00:04:10.290 --> 00:04:11.010
name for them.

134
00:04:11.650 --> 00:04:14.290
All right, apart from this, one

135
00:04:14.290 --> 00:04:15.930
more thing I would like to mention

136
00:04:15.930 --> 00:04:17.890
here is just keep this in mind

137
00:04:18.769 --> 00:04:20.490
that we will have a lot

138
00:04:20.490 --> 00:04:23.530
of folder based structure or files.

139
00:04:23.530 --> 00:04:24.770
These are things.

140
00:04:24.770 --> 00:04:26.690
Just remember one thing that

141
00:04:27.570 --> 00:04:28.810
anything that goes, let's just

142
00:04:28.810 --> 00:04:30.370
say diagrams will surely have.

143
00:04:30.370 --> 00:04:31.890
Let's just say this is again a class

144
00:04:32.510 --> 00:04:33.270
and inside this you

145
00:04:33.270 --> 00:04:35.110
have created this folder and you

146
00:04:35.110 --> 00:04:36.670
have created this folder.

147
00:04:37.230 --> 00:04:38.430
Whatever you create.

148
00:04:38.430 --> 00:04:39.750
For example, let's just say you

149
00:04:39.750 --> 00:04:43.070
create a smaller thing, outside

150
00:04:43.070 --> 00:04:44.990
in this class and you also

151
00:04:44.990 --> 00:04:46.510
create some things inside this.

152
00:04:46.510 --> 00:04:47.590
And you also create some

153
00:04:47.590 --> 00:04:48.510
things inside this.

154
00:04:49.470 --> 00:04:51.350
So whole other thing that I want

155
00:04:51.350 --> 00:04:54.110
to say in this is if this program

156
00:04:54.110 --> 00:04:57.150
wants to access this, it is

157
00:04:57.150 --> 00:04:59.760
perfectly okay because it's outside.

158
00:05:01.200 --> 00:05:04.080
And if this program wants to access

159
00:05:04.080 --> 00:05:05.240
this thing which is

160
00:05:05.240 --> 00:05:07.520
inside here, that is not okay.

161
00:05:07.520 --> 00:05:10.240
Yeah, this part is not okay.

162
00:05:12.640 --> 00:05:14.760
So treat each of the function

163
00:05:14.760 --> 00:05:16.080
as an individual house

164
00:05:16.800 --> 00:05:18.760
and anything inside this house is

165
00:05:18.760 --> 00:05:20.480
accessible only by these people.

166
00:05:20.480 --> 00:05:22.200
So they can access anything

167
00:05:22.200 --> 00:05:23.680
outside the house, which is

168
00:05:23.680 --> 00:05:25.120
here in public, in open.

169
00:05:25.840 --> 00:05:27.240
But if you want to go anybody's

170
00:05:27.240 --> 00:05:28.120
house and want to use

171
00:05:28.120 --> 00:05:29.600
anything, that's not possible.

172
00:05:29.600 --> 00:05:30.720
Now again, I just want you

173
00:05:30.720 --> 00:05:31.680
to keep this in mind.

174
00:05:31.680 --> 00:05:33.800
As of now it, will get much more

175
00:05:33.800 --> 00:05:34.800
clear as we write the code.

176
00:05:34.800 --> 00:05:35.880
But I just want you to keep this

177
00:05:35.880 --> 00:05:39.040
in mind as this is whole of your

178
00:05:39.040 --> 00:05:41.040
city and this is your house.

179
00:05:41.600 --> 00:05:42.960
Anything that you bring inside the

180
00:05:42.960 --> 00:05:44.640
house or you make inside the house,

181
00:05:44.640 --> 00:05:46.560
maybe you're just a carpenter, you

182
00:05:46.560 --> 00:05:48.280
like to make stuff, you can

183
00:05:48.280 --> 00:05:49.960
actually, your family members can

184
00:05:49.960 --> 00:05:51.400
access all of these things, no

185
00:05:51.400 --> 00:05:52.040
problem at all.

186
00:05:52.040 --> 00:05:53.560
This guy can access this, this

187
00:05:53.560 --> 00:05:55.460
guy can access this, no problem.

188
00:05:55.460 --> 00:05:56.780
But when you try to access somebody

189
00:05:56.780 --> 00:05:58.140
else's house, he has to

190
00:05:58.140 --> 00:05:59.620
explicitly give you the permission

191
00:05:59.620 --> 00:06:01.060
that, hey, you can use this.

192
00:06:01.060 --> 00:06:02.620
But if anything, this is here like

193
00:06:02.620 --> 00:06:04.180
it's a public park or public

194
00:06:04.180 --> 00:06:05.940
road, hey, anybody can access this.

195
00:06:05.940 --> 00:06:06.940
If this guy wants to access

196
00:06:06.940 --> 00:06:08.580
it, that's okay, totally

197
00:06:08.580 --> 00:06:10.180
okay, no problem there.

198
00:06:10.180 --> 00:06:11.980
But if something is inside

199
00:06:11.980 --> 00:06:13.940
the house, that creates a problem.

200
00:06:13.940 --> 00:06:15.020
So this is something known

201
00:06:15.020 --> 00:06:17.060
as namespace and scope.

202
00:06:17.060 --> 00:06:18.620
And yes, it will get much more

203
00:06:18.620 --> 00:06:19.660
clear as we write the code.

204
00:06:19.660 --> 00:06:21.440
But just remember this concept that,

205
00:06:21.440 --> 00:06:23.160
hey, this is my house, this is whole

206
00:06:23.160 --> 00:06:25.240
of my city, this is public park,

207
00:06:25.240 --> 00:06:26.760
and this is again, somebody

208
00:06:26.760 --> 00:06:28.120
else's property in their house.

209
00:06:28.120 --> 00:06:29.480
So I cannot access that.

210
00:06:29.480 --> 00:06:30.640
And yeah, this is all that

211
00:06:30.640 --> 00:06:32.440
I wanted to have you about.

212
00:06:33.000 --> 00:06:34.800
The basics of how can I actually

213
00:06:34.800 --> 00:06:36.320
organize my Python code.

214
00:06:36.320 --> 00:06:38.160
And this is it again.

215
00:06:38.160 --> 00:06:39.160
I know this is a lot

216
00:06:39.160 --> 00:06:40.720
of theory, but this is all

217
00:06:40.720 --> 00:06:41.800
required, this is important.

218
00:06:41.800 --> 00:06:43.040
I don't want to skip even

219
00:06:43.040 --> 00:06:44.720
a tiny bit detail to make you

220
00:06:44.720 --> 00:06:46.040
a Python programmer, even

221
00:06:46.040 --> 00:06:47.720
a good Python programmer.

222
00:06:47.720 --> 00:06:48.920
That is it for this video.

223
00:06:48.920 --> 00:06:50.760
Let's catch up in the next one.
