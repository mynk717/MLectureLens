WEBVTT

1
00:00:00.160 --> 00:00:01.760
Okay, so now we have a very

2
00:00:01.760 --> 00:00:03.320
good knowledge on this require

3
00:00:03.320 --> 00:00:05.600
function on this package JSON,

4
00:00:05.600 --> 00:00:07.280
something on npm in it.

5
00:00:07.280 --> 00:00:09.760
So now let's explore the FS module

6
00:00:09.760 --> 00:00:11.120
and there is something really

7
00:00:11.120 --> 00:00:12.800
new that I want to tell you.

8
00:00:12.800 --> 00:00:14.080
Okay, so what I'm going

9
00:00:14.080 --> 00:00:14.800
to do is I'm just going

10
00:00:14.800 --> 00:00:16.320
to remove all the code from here.

11
00:00:16.320 --> 00:00:17.240
So right now you can see

12
00:00:17.240 --> 00:00:19.600
in my package JSON I have this

13
00:00:19.600 --> 00:00:20.640
thing that we have already

14
00:00:20.640 --> 00:00:21.840
seen in the last video.

15
00:00:22.400 --> 00:00:23.640
So now what I'm going to do is

16
00:00:23.640 --> 00:00:25.280
let's explore the FS module.

17
00:00:25.280 --> 00:00:26.280
So what I can do is I can just

18
00:00:26.280 --> 00:00:28.720
say const FS equals to require.

19
00:00:28.720 --> 00:00:30.080
Okay, now I can use require

20
00:00:30.080 --> 00:00:31.920
and I can just pass in the fs.

21
00:00:31.920 --> 00:00:32.800
So now you can see that

22
00:00:32.800 --> 00:00:33.840
the recommendation system

23
00:00:33.840 --> 00:00:34.720
is working very good.

24
00:00:34.720 --> 00:00:35.560
You can see we have a lot

25
00:00:35.560 --> 00:00:37.840
of packages and I can say fs.

26
00:00:37.840 --> 00:00:39.400
Now here is one thing.

27
00:00:39.400 --> 00:00:40.800
Okay, this is something very new.

28
00:00:40.800 --> 00:00:42.960
Now you can say either FS

29
00:00:42.960 --> 00:00:44.800
in documentation, you will see

30
00:00:44.800 --> 00:00:45.880
something like this, right?

31
00:00:45.880 --> 00:00:48.240
So if I open the documentation, so

32
00:00:48.240 --> 00:00:49.880
you can see that they are importing

33
00:00:49.880 --> 00:00:51.440
in this particular manner, I.e.

34
00:00:51.440 --> 00:00:52.880
node colon fs.

35
00:00:52.880 --> 00:00:54.800
Now this is a relatively newer thing.

36
00:00:54.800 --> 00:00:57.600
If even you say require fs,

37
00:00:57.600 --> 00:00:59.530
this is going to work fine.

38
00:00:59.530 --> 00:01:00.530
But in the newer versions

39
00:01:00.530 --> 00:01:01.850
of Node js they are actually

40
00:01:01.850 --> 00:01:03.450
moving, they're adding a support

41
00:01:03.450 --> 00:01:05.690
for a namespaced this thing.

42
00:01:05.690 --> 00:01:08.170
So this avoids the conflict.

43
00:01:08.170 --> 00:01:10.410
So tomorrow if you have an FS

44
00:01:10.410 --> 00:01:12.250
module, which is a third party

45
00:01:12.250 --> 00:01:14.410
module as well, this will

46
00:01:14.410 --> 00:01:16.090
avoid the conflict, right?

47
00:01:16.090 --> 00:01:17.650
So this is telling the node js that

48
00:01:17.650 --> 00:01:19.690
hey, this is a built in module.

49
00:01:19.690 --> 00:01:21.530
So this is a relatively newer thing.

50
00:01:21.530 --> 00:01:22.690
Older versions of Node

51
00:01:22.690 --> 00:01:23.530
js don't have it.

52
00:01:23.530 --> 00:01:25.050
It's only newer version.

53
00:01:25.050 --> 00:01:26.770
So I also prefer this only.

54
00:01:26.770 --> 00:01:29.210
So this makes this explicit that

55
00:01:29.210 --> 00:01:31.210
if there is, if there is a package

56
00:01:31.210 --> 00:01:32.970
name starting with node colon,

57
00:01:32.970 --> 00:01:34.410
that's a built in package.

58
00:01:34.410 --> 00:01:35.850
If it is just written like this,

59
00:01:35.850 --> 00:01:38.130
it can be a, external package.

60
00:01:38.130 --> 00:01:39.210
And if it starts with dot,

61
00:01:39.210 --> 00:01:40.530
then that's a, then that's

62
00:01:40.530 --> 00:01:41.930
a custom module, right?

63
00:01:41.930 --> 00:01:44.049
So now I want to do it with node fs.

64
00:01:44.049 --> 00:01:45.530
Now let's see what all we have.

65
00:01:45.530 --> 00:01:46.850
So first you can read the files.

66
00:01:46.850 --> 00:01:50.250
You can just say fs.read file sync.

67
00:01:50.250 --> 00:01:51.890
Now here is one very interesting

68
00:01:51.890 --> 00:01:53.450
thing that every function

69
00:01:53.450 --> 00:01:55.050
that you see has a normal

70
00:01:55.050 --> 00:01:57.190
version and a sync version.

71
00:01:57.190 --> 00:01:59.950
So sync basically means this is going

72
00:01:59.950 --> 00:02:01.750
to be a blocking operation.

73
00:02:02.470 --> 00:02:03.550
Now what is a blocking

74
00:02:03.550 --> 00:02:04.790
operation that we will cover

75
00:02:04.790 --> 00:02:05.870
in the upcoming videos.

76
00:02:05.870 --> 00:02:07.630
But as of now you can just, you

77
00:02:07.630 --> 00:02:09.190
know, use a synchronized version or

78
00:02:09.190 --> 00:02:10.710
I can say the blocking version.

79
00:02:10.710 --> 00:02:12.030
So what I can do is I can just

80
00:02:12.030 --> 00:02:13.910
give the notes txt file.

81
00:02:13.910 --> 00:02:16.670
Okay so notes.txt file.

82
00:02:16.670 --> 00:02:17.910
That is what I want to read.

83
00:02:17.910 --> 00:02:20.300
And I want to read it as a u

84
00:02:20.300 --> 00:02:22.350
sorry, I want to read it as a UTF

85
00:02:22.350 --> 00:02:24.060
88 and this is going to give

86
00:02:24.060 --> 00:02:25.500
you the contents of the file.

87
00:02:25.500 --> 00:02:27.380
So just store it in the contents.

88
00:02:27.380 --> 00:02:29.220
What do you call variable right?

89
00:02:29.220 --> 00:02:31.500
And now just you can do a console

90
00:02:31.500 --> 00:02:33.140
dot log on the contents.

91
00:02:33.140 --> 00:02:35.300
So good control tilde and then

92
00:02:35.300 --> 00:02:36.900
you can just say node and you can

93
00:02:36.900 --> 00:02:39.540
just say index index and enter.

94
00:02:39.540 --> 00:02:40.940
So you can see I'm able to read

95
00:02:40.940 --> 00:02:42.860
the contents using this fs.

96
00:02:42.860 --> 00:02:43.660
What you can do is you

97
00:02:43.660 --> 00:02:45.260
can even create a file.

98
00:02:45.260 --> 00:02:46.580
You can say fs.create

99
00:02:46.580 --> 00:02:49.040
file okay, so create a.

100
00:02:49.040 --> 00:02:50.400
I should say write file actually.

101
00:02:50.400 --> 00:02:51.240
So right File.

102
00:02:51.240 --> 00:02:51.440
Right.

103
00:02:51.440 --> 00:02:52.720
While saying so let's go with

104
00:02:52.720 --> 00:02:54.000
the blocking operation

105
00:02:54.000 --> 00:02:55.600
and what is the name of the file?

106
00:02:55.600 --> 00:02:58.680
So I'll just say copy.txt what do

107
00:02:58.680 --> 00:03:00.440
you want to write in this file?

108
00:03:00.440 --> 00:03:04.720
So let's say I want to write this or

109
00:03:04.720 --> 00:03:06.760
maybe you can pass this content and

110
00:03:06.760 --> 00:03:12.000
as a UTF8 so I want to pass UTF UTF8

111
00:03:12.000 --> 00:03:14.160
so now what this particular thing is

112
00:03:14.160 --> 00:03:16.010
going to do, Let me just move it up

113
00:03:16.010 --> 00:03:17.290
and I'm just going to comment it out

114
00:03:17.290 --> 00:03:18.730
because this is what we have seen.

115
00:03:18.730 --> 00:03:19.610
This is going to create

116
00:03:19.610 --> 00:03:20.890
a new file that is copy.

117
00:03:20.890 --> 00:03:22.890
Txt and will write these contents.

118
00:03:22.890 --> 00:03:23.930
So now you can see we don't

119
00:03:23.930 --> 00:03:25.450
have any file that is copy.

120
00:03:25.450 --> 00:03:26.330
Txt.

121
00:03:26.330 --> 00:03:27.970
So if I run this particular code,

122
00:03:27.970 --> 00:03:30.050
you can see it creates a new copy.

123
00:03:30.050 --> 00:03:31.570
Txt file and you can see we

124
00:03:31.570 --> 00:03:32.810
have the contents here.

125
00:03:32.810 --> 00:03:34.210
What you can even do is that you

126
00:03:34.210 --> 00:03:35.770
can actually read contents from

127
00:03:35.770 --> 00:03:37.610
one file and then you can write

128
00:03:37.610 --> 00:03:39.610
those contents in the another file.

129
00:03:39.610 --> 00:03:41.490
So now if I run this code, what

130
00:03:41.490 --> 00:03:42.770
you are going to say is that copy.

131
00:03:42.770 --> 00:03:44.330
Txt is actually a copy of notes.

132
00:03:44.330 --> 00:03:47.160
Txt One interesting thing here

133
00:03:47.160 --> 00:03:49.080
to note is that this always

134
00:03:49.080 --> 00:03:50.840
overrides the content, right?

135
00:03:50.840 --> 00:03:52.240
So if I remove this and I just

136
00:03:52.240 --> 00:03:53.600
say hey, what you're going

137
00:03:53.600 --> 00:03:55.480
to notice is it always and always

138
00:03:55.480 --> 00:03:56.680
overrides the content.

139
00:03:57.320 --> 00:03:58.960
Similar to this, if you don't want

140
00:03:58.960 --> 00:04:00.200
to override the content,

141
00:04:00.200 --> 00:04:02.520
you can just say append file sync.

142
00:04:02.520 --> 00:04:04.840
This will always add the content

143
00:04:04.840 --> 00:04:05.560
to the file.

144
00:04:05.560 --> 00:04:06.040
Okay?

145
00:04:06.040 --> 00:04:07.080
It will not override.

146
00:04:07.080 --> 00:04:08.200
You can see the content

147
00:04:08.200 --> 00:04:09.560
is getting added.

148
00:04:09.560 --> 00:04:10.800
So let's say if I give now

149
00:04:10.800 --> 00:04:13.320
contents it is going to be added.

150
00:04:13.320 --> 00:04:15.810
So pre previous data stays

151
00:04:15.810 --> 00:04:17.970
and new content is getting added.

152
00:04:17.970 --> 00:04:19.089
So you can even say hey

153
00:04:19.089 --> 00:04:20.529
slash n for a new line.

154
00:04:20.529 --> 00:04:21.850
So two new line characters

155
00:04:21.850 --> 00:04:23.170
and then say hey.

156
00:04:23.170 --> 00:04:25.250
And if I run it so you can see after

157
00:04:25.250 --> 00:04:27.010
two lines you are getting an hey.

158
00:04:27.010 --> 00:04:28.330
So you have append file,

159
00:04:28.330 --> 00:04:29.650
you have write file, right?

160
00:04:29.650 --> 00:04:31.410
So let me just write it here again

161
00:04:31.410 --> 00:04:32.090
so that you have

162
00:04:32.090 --> 00:04:33.410
the document ready, right?

163
00:04:33.410 --> 00:04:35.010
You can refer to this code.

164
00:04:35.010 --> 00:04:36.090
So earlier we have

165
00:04:36.090 --> 00:04:37.290
seen write file sync.

166
00:04:37.290 --> 00:04:38.610
So you can just say write something

167
00:04:38.610 --> 00:04:39.810
which overrides the content.

168
00:04:40.370 --> 00:04:42.280
This always creates a new con.

169
00:04:42.280 --> 00:04:43.810
Basically append C file content.

170
00:04:44.700 --> 00:04:46.210
You can even create directories.

171
00:04:46.210 --> 00:04:46.690
Okay?

172
00:04:46.690 --> 00:04:48.260
So you can just say fs

173
00:04:48.260 --> 00:04:52.860
sorry fs.create.mkdir

174
00:04:53.570 --> 00:04:55.250
that is for make directory.

175
00:04:55.250 --> 00:04:56.530
What directory you want to make.

176
00:04:56.530 --> 00:04:57.610
I want to make a directory

177
00:04:57.610 --> 00:04:59.250
for let's say games, right?

178
00:04:59.250 --> 00:04:59.770
So games.

179
00:04:59.770 --> 00:05:00.810
And you can even pass

180
00:05:00.810 --> 00:05:02.250
options like recursive.

181
00:05:02.250 --> 00:05:04.210
Let's say you have more and in

182
00:05:04.210 --> 00:05:05.730
which mode you want to create.

183
00:05:05.730 --> 00:05:08.690
So I'll just say hey, FS mkdir node

184
00:05:09.220 --> 00:05:11.020
and invalid archetype.

185
00:05:11.580 --> 00:05:13.140
Oh, just a second.

186
00:05:13.140 --> 00:05:13.780
I have to use

187
00:05:13.780 --> 00:05:14.740
the synchronous version.

188
00:05:14.740 --> 00:05:16.140
Yeah, so now you can see

189
00:05:16.140 --> 00:05:17.660
it created a folder for me

190
00:05:17.660 --> 00:05:19.260
that is games, right?

191
00:05:19.260 --> 00:05:20.540
Similarly I can say hey,

192
00:05:20.540 --> 00:05:22.730
inside the games, create a folder

193
00:05:22.730 --> 00:05:25.020
XYZ and then create a.

194
00:05:25.020 --> 00:05:25.940
And here you will

195
00:05:25.940 --> 00:05:27.260
actually get an error.

196
00:05:27.260 --> 00:05:28.660
So you can see that the error is

197
00:05:28.660 --> 00:05:30.220
coming that because in Games

198
00:05:30.220 --> 00:05:32.300
there is no folder xyz, right?

199
00:05:32.300 --> 00:05:33.780
So to overcome this particular

200
00:05:33.780 --> 00:05:34.660
problem, just say

201
00:05:34.660 --> 00:05:36.780
recursive and set it to true.

202
00:05:36.780 --> 00:05:38.420
Now it will automatically create all

203
00:05:38.420 --> 00:05:39.580
the folders you can see in Games.

204
00:05:39.580 --> 00:05:41.480
You have xyz, you have have a.

205
00:05:41.480 --> 00:05:43.760
So you can create folders, you

206
00:05:43.760 --> 00:05:45.560
can create directories, right?

207
00:05:45.560 --> 00:05:46.600
And you can do something

208
00:05:46.600 --> 00:05:49.600
like fs.remove directory.

209
00:05:49.600 --> 00:05:52.120
Okay, let's say we have frm

210
00:05:52.120 --> 00:05:53.240
dir saying

211
00:05:53.240 --> 00:05:54.640
what directory want to remove?

212
00:05:54.640 --> 00:05:56.320
I want to remove the games directory.

213
00:05:56.320 --> 00:05:57.880
And again again, right?

214
00:05:58.840 --> 00:05:59.800
Okay, so I want to just

215
00:05:59.800 --> 00:06:01.080
remove this directory.

216
00:06:01.080 --> 00:06:02.920
So if I do a node it gets an error.

217
00:06:02.920 --> 00:06:03.200
Why?

218
00:06:03.200 --> 00:06:04.160
Because Games is not

219
00:06:04.160 --> 00:06:05.480
an empty directory.

220
00:06:05.480 --> 00:06:06.760
So first you have to actually

221
00:06:06.760 --> 00:06:08.000
remove all the directories.

222
00:06:08.000 --> 00:06:08.820
So, so first let's

223
00:06:08.820 --> 00:06:10.140
remove the A directory.

224
00:06:10.140 --> 00:06:11.580
So you can see A is gone.

225
00:06:11.580 --> 00:06:13.620
Then let's remove the xyz Then

226
00:06:13.620 --> 00:06:15.020
you can see the XYZ also on.

227
00:06:15.020 --> 00:06:15.900
And then finally we

228
00:06:15.900 --> 00:06:16.660
can remove the game.

229
00:06:16.660 --> 00:06:17.900
So that's a Linux feature, right?

230
00:06:17.900 --> 00:06:19.660
You cannot remove a directory if

231
00:06:19.660 --> 00:06:21.660
in Linux if it has some content.

232
00:06:21.660 --> 00:06:23.220
So yeah, so same thing

233
00:06:23.220 --> 00:06:24.219
it is doing that.

234
00:06:24.219 --> 00:06:25.660
So now you have seen that using

235
00:06:25.660 --> 00:06:27.620
this FS, you can do actually a lot

236
00:06:27.620 --> 00:06:29.820
of stuff FS.Let's see

237
00:06:29.820 --> 00:06:32.140
FS.Append file append file sync.

238
00:06:32.140 --> 00:06:33.500
You have chmod.

239
00:06:33.500 --> 00:06:35.620
So now you understand what all

240
00:06:35.620 --> 00:06:36.860
these functions are doing, right?

241
00:06:36.860 --> 00:06:38.620
These are all the functions that

242
00:06:38.620 --> 00:06:41.480
are there to work with files.

243
00:06:41.480 --> 00:06:42.720
Similarly, you have a function

244
00:06:42.720 --> 00:06:43.400
to delete a file.

245
00:06:43.400 --> 00:06:44.880
Let's say you have unlink.

246
00:06:44.880 --> 00:06:46.560
So you can just say unlink sync.

247
00:06:46.560 --> 00:06:48.320
Let's say I want to delete this copy.

248
00:06:48.320 --> 00:06:49.120
Txt file.

249
00:06:49.120 --> 00:06:49.920
Just pass copy.

250
00:06:49.920 --> 00:06:51.480
Txt and this is going

251
00:06:51.480 --> 00:06:52.200
to delete this file.

252
00:06:52.200 --> 00:06:53.000
So you can see that file

253
00:06:53.000 --> 00:06:53.720
got deleted, right?

254
00:06:53.720 --> 00:06:54.840
This is a deleted file.

255
00:06:54.840 --> 00:06:55.679
Nice.

256
00:06:55.679 --> 00:06:57.240
So yeah, this FS module

257
00:06:57.240 --> 00:06:58.000
is very powerful.

258
00:06:58.000 --> 00:06:59.920
It gives you all the functionalities

259
00:06:59.920 --> 00:07:01.600
to work on the file system.

260
00:07:01.600 --> 00:07:03.240
Create directories, create files,

261
00:07:03.240 --> 00:07:04.600
write to the files, open the

262
00:07:04.600 --> 00:07:05.920
files in the read mode, open

263
00:07:05.920 --> 00:07:07.740
file in a write mode, create

264
00:07:07.740 --> 00:07:08.900
folders, delete folders,

265
00:07:08.900 --> 00:07:10.260
basically everything related to

266
00:07:10.260 --> 00:07:11.580
the file system.

267
00:07:11.580 --> 00:07:12.980
So this was your node fs.

268
00:07:12.980 --> 00:07:14.380
And now you also know that why

269
00:07:14.380 --> 00:07:15.500
this node is there, right?

270
00:07:15.500 --> 00:07:17.140
In order to avoid the conflict

271
00:07:17.140 --> 00:07:18.860
and looks more cleaner.

272
00:07:18.860 --> 00:07:20.500
So moving forward, we are going

273
00:07:20.500 --> 00:07:22.100
to import the built in modules

274
00:07:22.100 --> 00:07:24.300
using the node namespace, right?

275
00:07:24.300 --> 00:07:26.460
And for third party we are going

276
00:07:26.460 --> 00:07:27.820
to just do it like this.

277
00:07:27.820 --> 00:07:29.980
So I hope that you like the video.

278
00:07:29.980 --> 00:07:31.740
In the next video, let's

279
00:07:31.740 --> 00:07:32.700
create a project.

280
00:07:32.700 --> 00:07:33.140
Okay.

281
00:07:33.140 --> 00:07:34.780
Let's see how we can create

282
00:07:34.780 --> 00:07:38.220
an HTTP server in the node js.
