WEBVTT

1
00:00:00.160 --> 00:00:01.840
Do you remember in the last video

2
00:00:01.840 --> 00:00:04.000
I said that we have created

3
00:00:04.000 --> 00:00:08.240
a script js file and you can write

4
00:00:08.240 --> 00:00:10.160
any valid JavaScript code

5
00:00:10.160 --> 00:00:11.680
here that is going to run.

6
00:00:11.680 --> 00:00:14.000
Actually that was half lie.

7
00:00:14.000 --> 00:00:16.280
Let me tell you, if you are

8
00:00:16.280 --> 00:00:18.360
from a JavaScript background, that

9
00:00:18.360 --> 00:00:19.200
means you have been working

10
00:00:19.200 --> 00:00:21.200
with JavaScript with browsers.

11
00:00:21.200 --> 00:00:22.320
Tell me one thing, if

12
00:00:22.320 --> 00:00:23.680
I say alert, right?

13
00:00:23.680 --> 00:00:26.000
And I say, for example, you know

14
00:00:26.000 --> 00:00:29.840
this is an alert message, what is

15
00:00:29.840 --> 00:00:31.980
going to happen if you run this,

16
00:00:31.980 --> 00:00:33.820
this particular piece of code on

17
00:00:33.820 --> 00:00:35.340
browser, you will get an alert

18
00:00:35.340 --> 00:00:35.900
window, right?

19
00:00:35.900 --> 00:00:37.300
So if you don't believe

20
00:00:37.300 --> 00:00:38.540
me, let me show you.

21
00:00:38.540 --> 00:00:40.020
So if I just open up an inspect

22
00:00:40.020 --> 00:00:43.220
element and I go into the console

23
00:00:43.220 --> 00:00:44.100
and I do this, you can see

24
00:00:44.100 --> 00:00:45.180
that you are getting an alert.

25
00:00:45.900 --> 00:00:48.179
Now let's try to run this code,

26
00:00:48.179 --> 00:00:49.300
okay, let's try to run this code

27
00:00:49.300 --> 00:00:51.340
in the browse in the node js.

28
00:00:51.340 --> 00:00:54.060
And what happened as soon as I

29
00:00:54.060 --> 00:00:57.540
tried to run this code in my node

30
00:00:57.540 --> 00:00:59.850
js environment, I got an error.

31
00:00:59.850 --> 00:01:01.650
The error says alert is

32
00:01:01.650 --> 00:01:03.770
not defined Piyush.

33
00:01:03.770 --> 00:01:06.290
How come this particular code,

34
00:01:06.290 --> 00:01:08.490
this alert is working in the browser

35
00:01:08.490 --> 00:01:10.530
but the same JavaScript code

36
00:01:10.530 --> 00:01:12.330
is not working in the Node js?

37
00:01:12.330 --> 00:01:14.330
So here is a subtle difference

38
00:01:14.890 --> 00:01:16.010
that you have to understand.

39
00:01:16.650 --> 00:01:18.650
See guys, first of all,

40
00:01:18.650 --> 00:01:20.810
a lot of things that you use

41
00:01:20.810 --> 00:01:22.890
in your JavaScript code

42
00:01:22.890 --> 00:01:25.210
is a part of your web API.

43
00:01:25.780 --> 00:01:29.220
For example, this alert, this alert

44
00:01:29.220 --> 00:01:32.340
is not a part of JavaScript, okay?

45
00:01:32.340 --> 00:01:34.900
This is a browser given functionality

46
00:01:34.900 --> 00:01:35.940
to you because whenever

47
00:01:35.940 --> 00:01:38.820
you call this line, browser

48
00:01:38.820 --> 00:01:40.340
gives you this ui, right?

49
00:01:40.340 --> 00:01:41.700
This is the responsibility

50
00:01:41.700 --> 00:01:43.420
of the browser to render

51
00:01:43.420 --> 00:01:44.900
this thing on the ui.

52
00:01:44.900 --> 00:01:46.980
But in Node js, which is basically

53
00:01:46.980 --> 00:01:49.180
a command line, you don't have these

54
00:01:49.180 --> 00:01:50.300
functionalities, you don't have

55
00:01:50.300 --> 00:01:51.940
any window, you don't have any ui,

56
00:01:51.940 --> 00:01:54.330
you don't have any these alerts.

57
00:01:54.330 --> 00:01:57.450
So These browser related APIs,

58
00:01:57.450 --> 00:01:59.290
like you have fetch, you have

59
00:01:59.290 --> 00:02:00.690
alert, you have document,

60
00:02:00.690 --> 00:02:02.010
you have window object

61
00:02:02.010 --> 00:02:04.970
that is not available in node js.

62
00:02:04.970 --> 00:02:08.050
So that means anything, anything that

63
00:02:08.050 --> 00:02:09.729
is related to this window object.

64
00:02:09.729 --> 00:02:11.090
So if I just say window,

65
00:02:11.090 --> 00:02:13.370
okay, wind, window.

66
00:02:13.930 --> 00:02:15.210
So you can see that on

67
00:02:15.210 --> 00:02:16.810
the window, window basically means

68
00:02:16.810 --> 00:02:18.290
this browser, I have a lot

69
00:02:18.290 --> 00:02:19.850
of features on the window.

70
00:02:19.850 --> 00:02:21.290
I can have document, add,

71
00:02:21.290 --> 00:02:22.250
event listener, I have

72
00:02:22.250 --> 00:02:23.930
the document object, I have the set

73
00:02:23.930 --> 00:02:25.290
interval, set timeout.

74
00:02:25.290 --> 00:02:26.590
So, so there are a lot

75
00:02:26.590 --> 00:02:28.670
of features that a browser gives me.

76
00:02:28.670 --> 00:02:30.110
Like it gives me the fetch

77
00:02:30.110 --> 00:02:31.870
for making API calls.

78
00:02:31.870 --> 00:02:34.430
So these all features are

79
00:02:34.430 --> 00:02:36.390
actually the features given to you

80
00:02:36.390 --> 00:02:38.830
by the browser which are not,

81
00:02:38.830 --> 00:02:40.590
which are not available here.

82
00:02:40.590 --> 00:02:41.549
Got it.

83
00:02:41.549 --> 00:02:43.750
So you can write any valid

84
00:02:43.750 --> 00:02:46.070
JavaScript code which is given

85
00:02:46.070 --> 00:02:47.950
to you in the native

86
00:02:47.950 --> 00:02:50.230
JavaScript, it should not be a

87
00:02:50.230 --> 00:02:51.670
feature that is coming from a

88
00:02:51.670 --> 00:02:53.110
browser because we don't have a

89
00:02:53.110 --> 00:02:54.110
browser window here.

90
00:02:54.110 --> 00:02:55.470
This is a, Node js environment.

91
00:02:56.280 --> 00:02:57.960
So that means now you have two

92
00:02:57.960 --> 00:03:01.480
different environments to run js.

93
00:03:01.480 --> 00:03:03.400
One is you have a browser where

94
00:03:03.400 --> 00:03:05.160
you can have your js code,

95
00:03:05.160 --> 00:03:07.080
you can have your browser APIs.

96
00:03:07.080 --> 00:03:08.920
So browser APIs include like

97
00:03:08.920 --> 00:03:09.680
things like, you know,

98
00:03:09.680 --> 00:03:12.039
fetches there and this alert

99
00:03:12.039 --> 00:03:13.160
thing is there, right?

100
00:03:13.160 --> 00:03:15.080
But when you move into the Node js

101
00:03:15.080 --> 00:03:17.640
environment, these things goes away.

102
00:03:17.640 --> 00:03:18.920
You have the core js,

103
00:03:18.920 --> 00:03:20.320
you have extra things.

104
00:03:20.320 --> 00:03:21.360
Okay, I'll tell you, you

105
00:03:21.360 --> 00:03:22.200
have some extra things.

106
00:03:22.200 --> 00:03:23.440
For example, you have file system,

107
00:03:23.440 --> 00:03:25.120
you have crypto module, you

108
00:03:25.120 --> 00:03:26.520
can do crypto typography here.

109
00:03:26.520 --> 00:03:27.560
You can do a lot of more

110
00:03:27.560 --> 00:03:28.640
things here, right?

111
00:03:28.640 --> 00:03:30.480
That is given to you by the Node js.

112
00:03:30.480 --> 00:03:32.720
You can do file handling here,

113
00:03:32.720 --> 00:03:35.520
but you cannot natively do fetch.

114
00:03:35.520 --> 00:03:36.760
You cannot do alert.

115
00:03:36.760 --> 00:03:38.110
You cannot do something,

116
00:03:38.110 --> 00:03:38.880
sorry, not alter.

117
00:03:38.880 --> 00:03:40.080
I mean alert.

118
00:03:40.080 --> 00:03:41.280
You cannot do something like

119
00:03:41.280 --> 00:03:42.960
document getelementbyid.

120
00:03:42.960 --> 00:03:44.400
Because that doesn't make sense here.

121
00:03:44.400 --> 00:03:49.920
Okay, so Node js has rewritten all

122
00:03:49.920 --> 00:03:51.760
these bindings which are required.

123
00:03:52.390 --> 00:03:54.710
For example, okay, understand this.

124
00:03:54.710 --> 00:03:56.270
In browser you have this

125
00:03:56.270 --> 00:03:57.670
something known as set timeout.

126
00:03:57.670 --> 00:03:59.830
Yes or no, you have the set timeout.

127
00:03:59.830 --> 00:04:00.790
Do you know that this set

128
00:04:00.790 --> 00:04:03.110
timeout is a part of web API?

129
00:04:03.110 --> 00:04:04.950
So JavaScript natively

130
00:04:04.950 --> 00:04:05.870
doesn't support this.

131
00:04:05.870 --> 00:04:07.390
Any clocks, timers or

132
00:04:07.390 --> 00:04:08.390
something like that.

133
00:04:08.390 --> 00:04:09.750
That's a browser feature

134
00:04:09.750 --> 00:04:11.110
that browser gives you.

135
00:04:11.110 --> 00:04:13.110
But in Node js also

136
00:04:13.110 --> 00:04:14.430
you can use set timeout.

137
00:04:14.430 --> 00:04:16.550
It is valid in here also

138
00:04:16.550 --> 00:04:18.029
you can use this thing.

139
00:04:18.029 --> 00:04:19.550
Okay, so how are you able

140
00:04:19.550 --> 00:04:20.709
to use this set timeout?

141
00:04:20.709 --> 00:04:23.070
Because when the creator of Node

142
00:04:23.070 --> 00:04:25.270
js return this Node js engine,

143
00:04:25.270 --> 00:04:27.910
he has reimplemented these APIs.

144
00:04:27.910 --> 00:04:29.910
So he has only implemented

145
00:04:29.910 --> 00:04:32.670
those parts again which are required

146
00:04:32.670 --> 00:04:34.070
in the CLI environment.

147
00:04:34.070 --> 00:04:35.630
In the Node js environment also,

148
00:04:35.630 --> 00:04:37.310
for example, you might

149
00:04:37.310 --> 00:04:38.550
need set timeout, right?

150
00:04:38.550 --> 00:04:39.830
You might need set interval,

151
00:04:39.830 --> 00:04:41.510
but in any case I don't

152
00:04:41.510 --> 00:04:42.910
need alert on my backend.

153
00:04:42.910 --> 00:04:44.390
Okay, so these particular

154
00:04:44.390 --> 00:04:46.230
things are not present.

155
00:04:46.230 --> 00:04:47.300
So these things are,

156
00:04:47.300 --> 00:04:48.580
are not present here.

157
00:04:48.580 --> 00:04:50.900
Okay, so even though it is

158
00:04:50.900 --> 00:04:52.500
JavaScript, but yeah, the

159
00:04:52.500 --> 00:04:53.620
JavaScript that you use on

160
00:04:53.620 --> 00:04:56.020
browser is not guaranteed to run

161
00:04:56.020 --> 00:04:58.500
here, and the JavaScript code

162
00:04:58.500 --> 00:05:00.220
that can be run in the Node js is

163
00:05:00.220 --> 00:05:01.540
not guaranteed to run here.

164
00:05:01.540 --> 00:05:02.460
Depends code.

165
00:05:02.460 --> 00:05:03.780
JavaScript will always run,

166
00:05:03.780 --> 00:05:05.900
but features injected by the browser

167
00:05:05.900 --> 00:05:08.060
API or the Node js API will

168
00:05:08.060 --> 00:05:09.660
not work in a cross platform.

169
00:05:09.660 --> 00:05:12.260
Okay, so there are subtle differences

170
00:05:12.260 --> 00:05:13.620
that you have to keep in mind.
